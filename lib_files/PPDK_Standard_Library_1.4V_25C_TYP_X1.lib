library (PPDK_Standard_Library_1.4V_25C_TYP_X1) {
  /* Models written by Liberate 15.1.4.070 from Cadence Design Systems, Inc. on Do 14. Nov 13:40:49 CET 2019 */
  comment : "";
  date : "$Date: Thu Nov 14 13:36:44 2019 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 1.4);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 1e+06;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 1.4;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (TT) {
    process : 1;
    temperature : 25;
    voltage : 1.4;
  }
  default_operating_conditions : TT;
  lu_table_template (constraintX1_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 2000, 5000");
    index_2 ("1000, 2000, 5000");
  }
  lu_table_template (delayX1_3x3) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 2000, 5000");
    index_2 ("10000, 15000, 20000");
  }
  lu_table_template (mpw_constraintX1_3x3) {
    variable_1 : constrained_pin_transition;
    index_1 ("1000, 2000, 5000");
  }
  power_lut_template (passive_powerX1_3x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 2000, 5000");
  }
  power_lut_template (powerX1_3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 2000, 5000");
    index_2 ("10000, 15000, 20000");
  }
  cell (DFFNRX1) {
    area : 2776032;
    cell_leakage_power : 247519;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 269798;
      when : "(CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 268070;
      when : "(CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 268437;
      when : "(CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 269344;
      when : "(CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 232331;
      when : "(CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 267984;
      when : "(CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 232759;
      when : "(!CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 232179;
      when : "(!CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 231806;
      when : "(!CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 233169;
      when : "(!CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 232571;
      when : "(!CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 231781;
      when : "(!CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 247519;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.93352e+06, 6.08302e+06, 6.23773e+06", \
            "5.93226e+06, 6.08247e+06, 6.23732e+06", \
            "5.93262e+06, 6.08353e+06, 6.23814e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.65902e+06, 2.84426e+06, 3.03595e+06", \
            "2.659e+06, 2.84434e+06, 3.036e+06", \
            "2.65902e+06, 2.84422e+06, 3.03594e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.19962e+07, 1.21843e+07, 1.23668e+07", \
            "1.19988e+07, 1.21816e+07, 1.23677e+07", \
            "1.19965e+07, 1.21849e+07, 1.23707e+07" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "638100, 674190, 712940", \
            "638190, 674020, 712500", \
            "638190, 674190, 712650" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "CP";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "CP";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.05092e+06, 2.22078e+06, 2.39142e+06", \
            "2.051e+06, 2.22063e+06, 2.39117e+06", \
            "2.05111e+06, 2.22057e+06, 2.38961e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.26675e+06, 2.46876e+06, 2.67294e+06", \
            "2.26675e+06, 2.46881e+06, 2.6729e+06", \
            "2.26677e+06, 2.46881e+06, 2.67253e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~CP & RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(!CP * RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.2699e+06, 2.44756e+06, 2.6266e+06", \
            "2.26996e+06, 2.4471e+06, 2.62636e+06", \
            "2.27006e+06, 2.44704e+06, 2.62528e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.35278e+06, 3.54605e+06, 3.74177e+06", \
            "3.35279e+06, 3.54604e+06, 3.74175e+06", \
            "3.35279e+06, 3.54603e+06, 3.7418e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~CP & ~RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(!CP * !RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27258e+06, 2.44932e+06, 2.62839e+06", \
            "2.27215e+06, 2.44933e+06, 2.62883e+06", \
            "2.27217e+06, 2.44938e+06, 2.62841e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.35255e+06, 3.54556e+06, 3.74174e+06", \
            "3.35203e+06, 3.54558e+06, 3.74139e+06", \
            "3.35203e+06, 3.54557e+06, 3.74176e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27258e+06, 2.44932e+06, 2.62839e+06", \
            "2.27215e+06, 2.44933e+06, 2.62883e+06", \
            "2.27217e+06, 2.44938e+06, 2.62841e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.35255e+06, 3.54556e+06, 3.74174e+06", \
            "3.35203e+06, 3.54558e+06, 3.74139e+06", \
            "3.35203e+06, 3.54557e+06, 3.74176e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "918040, 967970, 1.01302e+06", \
            "918040, 967937, 1.01321e+06", \
            "918090, 967976, 1.01323e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "442452, 460378, 479801", \
            "442445, 460373, 479789", \
            "442490, 460376, 479772" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.94343e+06, 5.0957e+06, 5.24468e+06", \
            "4.94355e+06, 5.09524e+06, 5.24466e+06", \
            "4.94342e+06, 5.09568e+06, 5.24479e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.33076e+06, 1.33613e+06, 1.34758e+06", \
            "1.33071e+06, 1.33626e+06, 1.34762e+06", \
            "1.33062e+06, 1.33729e+06, 1.34755e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & ~D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.97629e+06, 5.13466e+06, 5.29105e+06", \
            "4.9762e+06, 5.13493e+06, 5.29146e+06", \
            "4.97633e+06, 5.13614e+06, 5.29241e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.40532e+06, 1.41055e+06, 1.42033e+06", \
            "1.40429e+06, 1.41129e+06, 1.41954e+06", \
            "1.40533e+06, 1.41004e+06, 1.41914e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(!CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.28714e+06, 3.49104e+06, 3.69223e+06", \
            "3.2871e+06, 3.49097e+06, 3.69334e+06", \
            "3.28719e+06, 3.4912e+06, 3.69258e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "775731, 813839, 855167", \
            "775703, 813839, 855755", \
            "775868, 813703, 855123" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & ~D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(!CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.28822e+06, 3.492e+06, 3.69381e+06", \
            "3.2879e+06, 3.49212e+06, 3.69367e+06", \
            "3.28828e+06, 3.49213e+06, 3.6938e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "776531, 814700, 856302", \
            "776535, 814683, 856224", \
            "776611, 814704, 856225" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.97629e+06, 5.13466e+06, 5.29105e+06", \
            "4.9762e+06, 5.13493e+06, 5.29146e+06", \
            "4.97633e+06, 5.13614e+06, 5.29241e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.40532e+06, 1.41055e+06, 1.42033e+06", \
            "1.40429e+06, 1.41129e+06, 1.41954e+06", \
            "1.40533e+06, 1.41004e+06, 1.41914e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.59296e+06, 1.59105e+06, 1.58923e+06", \
            "1.59295e+06, 1.59103e+06, 1.58921e+06", \
            "1.59292e+06, 1.59099e+06, 1.58917e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.16961e+06, 1.16735e+06, 1.16513e+06", \
            "1.16958e+06, 1.16737e+06, 1.16511e+06", \
            "1.16956e+06, 1.1673e+06, 1.16504e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.6147e+06, 1.61279e+06, 1.61096e+06", \
            "1.61469e+06, 1.61278e+06, 1.61094e+06", \
            "1.61466e+06, 1.61273e+06, 1.6109e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.19205e+06, 1.18992e+06, 1.1879e+06", \
            "1.19203e+06, 1.18995e+06, 1.18787e+06", \
            "1.19202e+06, 1.18987e+06, 1.18781e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "819268, 817793, 816256", \
            "819259, 817788, 816248", \
            "819230, 817748, 816222" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "791884, 790571, 789237", \
            "791874, 790566, 789228", \
            "791845, 790525, 789201" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "849358, 847926, 846436", \
            "849346, 847926, 846424", \
            "849299, 847856, 846383" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "824619, 823322, 822006", \
            "824607, 823323, 821994", \
            "824561, 823253, 821954" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "493031, 490008, 487043", \
            "493027, 490003, 487031", \
            "493007, 489989, 487021" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "466726, 463972, 461266", \
            "466722, 463967, 461253", \
            "466701, 463951, 461241" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "494041, 491012, 488029", \
            "494033, 491003, 488031", \
            "494018, 490990, 488023" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "468704, 465946, 463224", \
            "468698, 465937, 463225", \
            "468682, 465922, 463215" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "849358, 847926, 846436", \
            "849346, 847926, 846424", \
            "849299, 847856, 846383" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "824619, 823322, 822006", \
            "824607, 823323, 821994", \
            "824561, 823253, 821954" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "IQ_bar";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.08881e+07, 1.10339e+07, 1.11845e+07", \
            "1.08856e+07, 1.10311e+07, 1.11826e+07", \
            "1.08845e+07, 1.10301e+07, 1.11817e+07" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.57807e+06, 2.75363e+06, 2.9382e+06", \
            "2.57952e+06, 2.75573e+06, 2.93837e+06", \
            "2.57951e+06, 2.75572e+06, 2.93837e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "9.72536e+06, 9.91464e+06, 1.00976e+07", \
            "9.72469e+06, 9.91356e+06, 1.00965e+07", \
            "9.72507e+06, 9.91426e+06, 1.00972e+07" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "796576, 810117, 823954", \
            "796364, 810138, 823939", \
            "796362, 810139, 823953" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(CP & RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(CP * RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.33967e+06, 6.49547e+06, 6.65805e+06", \
            "6.33954e+06, 6.49704e+06, 6.6601e+06", \
            "6.34002e+06, 6.49677e+06, 6.65803e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.22684e+06, 2.40462e+06, 2.58773e+06", \
            "2.22642e+06, 2.40318e+06, 2.5863e+06", \
            "2.22682e+06, 2.4034e+06, 2.58772e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(~CP & RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(!CP * RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.28251e+06, 6.42254e+06, 6.56883e+06", \
            "6.28276e+06, 6.42252e+06, 6.56725e+06", \
            "6.28215e+06, 6.42255e+06, 6.56726e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.8699e+06, 2.0513e+06, 2.2381e+06", \
            "1.86943e+06, 2.0513e+06, 2.23864e+06", \
            "1.86989e+06, 2.0513e+06, 2.23864e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.33967e+06, 6.49547e+06, 6.65805e+06", \
            "6.33954e+06, 6.49704e+06, 6.6601e+06", \
            "6.34002e+06, 6.49677e+06, 6.65803e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.22684e+06, 2.40462e+06, 2.58773e+06", \
            "2.22642e+06, 2.40318e+06, 2.5863e+06", \
            "2.22682e+06, 2.4034e+06, 2.58772e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.44721e+06, 3.49567e+06, 3.54245e+06", \
            "3.44846e+06, 3.49688e+06, 3.54371e+06", \
            "3.44722e+06, 3.49568e+06, 3.54245e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "796976, 808577, 820960", \
            "797024, 808811, 820994", \
            "796976, 808575, 820996" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(CP * D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.2471e+06, 2.43725e+06, 2.63213e+06", \
            "2.24606e+06, 2.43825e+06, 2.63349e+06", \
            "2.24698e+06, 2.43781e+06, 2.63284e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.0082e+06, 3.20092e+06, 3.39559e+06", \
            "3.00831e+06, 3.2007e+06, 3.39616e+06", \
            "3.00819e+06, 3.20087e+06, 3.39578e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & ~D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(CP * !D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.24837e+06, 2.43967e+06, 2.63358e+06", \
            "2.24764e+06, 2.43926e+06, 2.63405e+06", \
            "2.24845e+06, 2.44044e+06, 2.6341e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.00645e+06, 3.20016e+06, 3.39602e+06", \
            "3.00609e+06, 3.19977e+06, 3.39627e+06", \
            "3.00615e+06, 3.19983e+06, 3.39598e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(!CP * D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.3059e+06, 2.48446e+06, 2.66396e+06", \
            "2.30506e+06, 2.48445e+06, 2.66434e+06", \
            "2.3064e+06, 2.48571e+06, 2.6642e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.19321e+06, 3.38301e+06, 3.57416e+06", \
            "3.19319e+06, 3.38285e+06, 3.57453e+06", \
            "3.19319e+06, 3.3829e+06, 3.57415e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & ~D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(!CP * !D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.3068e+06, 2.48557e+06, 2.6647e+06", \
            "2.30594e+06, 2.48482e+06, 2.66483e+06", \
            "2.30729e+06, 2.4861e+06, 2.66534e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.19357e+06, 3.383e+06, 3.57423e+06", \
            "3.19354e+06, 3.384e+06, 3.57452e+06", \
            "3.1936e+06, 3.38406e+06, 3.57559e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.3068e+06, 2.48557e+06, 2.6647e+06", \
            "2.30594e+06, 2.48482e+06, 2.66483e+06", \
            "2.30729e+06, 2.4861e+06, 2.66534e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.19357e+06, 3.383e+06, 3.57423e+06", \
            "3.19354e+06, 3.384e+06, 3.57452e+06", \
            "3.1936e+06, 3.38406e+06, 3.57559e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.90814e+06, 1.90626e+06, 1.90442e+06", \
            "1.90815e+06, 1.90627e+06, 1.90443e+06", \
            "1.90812e+06, 1.90624e+06, 1.90441e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.05934e+06, 1.05731e+06, 1.05536e+06", \
            "1.05933e+06, 1.0573e+06, 1.05536e+06", \
            "1.0593e+06, 1.05727e+06, 1.05532e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.9303e+06, 1.92842e+06, 1.9266e+06", \
            "1.93031e+06, 1.92843e+06, 1.92661e+06", \
            "1.93028e+06, 1.92841e+06, 1.92658e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.08113e+06, 1.07914e+06, 1.07727e+06", \
            "1.08112e+06, 1.07913e+06, 1.07726e+06", \
            "1.08109e+06, 1.0791e+06, 1.07723e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.39992e+06, 1.3988e+06, 1.3977e+06", \
            "1.39991e+06, 1.39879e+06, 1.39771e+06", \
            "1.39991e+06, 1.3988e+06, 1.3977e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.37226e+06, 1.37117e+06, 1.3701e+06", \
            "1.37226e+06, 1.37117e+06, 1.37011e+06", \
            "1.37226e+06, 1.37117e+06, 1.3701e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.39087e+06, 1.3898e+06, 1.38872e+06", \
            "1.39088e+06, 1.38978e+06, 1.38868e+06", \
            "1.39082e+06, 1.38973e+06, 1.38863e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.36495e+06, 1.36391e+06, 1.36286e+06", \
            "1.36495e+06, 1.36389e+06, 1.36281e+06", \
            "1.36491e+06, 1.36384e+06, 1.36277e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.30737e+06, 1.30541e+06, 1.30349e+06", \
            "1.30736e+06, 1.3054e+06, 1.30348e+06", \
            "1.30737e+06, 1.3054e+06, 1.30349e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.27943e+06, 1.27746e+06, 1.27555e+06", \
            "1.27942e+06, 1.27745e+06, 1.27554e+06", \
            "1.27943e+06, 1.27746e+06, 1.27555e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.3062e+06, 1.30424e+06, 1.30231e+06", \
            "1.3062e+06, 1.30422e+06, 1.3023e+06", \
            "1.3062e+06, 1.30423e+06, 1.3023e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.27863e+06, 1.27667e+06, 1.27475e+06", \
            "1.27863e+06, 1.27666e+06, 1.27474e+06", \
            "1.27863e+06, 1.27666e+06, 1.27474e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.39992e+06, 1.3988e+06, 1.3977e+06", \
            "1.39991e+06, 1.39879e+06, 1.39771e+06", \
            "1.39991e+06, 1.3988e+06, 1.3977e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.37226e+06, 1.37117e+06, 1.3701e+06", \
            "1.37226e+06, 1.37117e+06, 1.37011e+06", \
            "1.37226e+06, 1.37117e+06, 1.3701e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
    }
    pin (CP) {
      clock : true;
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 188.4;
      rise_capacitance : 188.4;
      rise_capacitance_range (71.211, 352.009);
      fall_capacitance : 188.832;
      fall_capacitance_range (71.2287, 353.154);
      internal_power () {
        when : "(D * RST_N * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.08847e+06, 8.08844e+06, 8.08837e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.07769e+06, 7.07771e+06, 7.07776e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * RST_N * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.13214e+06, 8.1321e+06, 8.13205e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.03402e+06, 7.03404e+06, 7.0341e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.20668e+06, 7.20671e+06, 7.20675e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.1626e+06, 7.16263e+06, 7.16267e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * !RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.04665e+06, 8.04667e+06, 8.04659e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.1216e+06, 7.12163e+06, 7.12169e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * !RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.09084e+06, 8.09087e+06, 8.09079e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.07764e+06, 7.07767e+06, 7.07773e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * RST_N * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.96655e+06, 6.96655e+06, 6.9665e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * RST_N * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.92541e+06, 6.92541e+06, 6.92536e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.08725e+06, 8.08723e+06, 8.08716e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.10886e+06, 7.10888e+06, 7.10893e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.13111e+06, 8.1311e+06, 8.13102e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.0652e+06, 7.06522e+06, 7.06527e+06" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      capacitance : 94.1923;
      rise_capacitance : 94.1923;
      rise_capacitance_range (35.6055, 175.973);
      fall_capacitance : 94.4169;
      fall_capacitance_range (35.6143, 176.579);
      internal_power () {
        when : "(CP * RST_N * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.05019e+06, 8.05017e+06, 8.05008e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.0781e+06, 7.07813e+06, 7.07818e+06" \
          );
        }
      }
      internal_power () {
        when : "(CP * RST_N * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.07188e+06, 8.07187e+06, 8.07177e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.05641e+06, 7.05643e+06, 7.05649e+06" \
          );
        }
      }
      internal_power () {
        when : "(CP * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.09343e+06, 8.09343e+06, 8.09343e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.08518e+06, 8.08518e+06, 8.08519e+06" \
          );
        }
      }
      internal_power () {
        when : "(CP * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.11296e+06, 8.11296e+06, 8.11296e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.06578e+06, 8.06578e+06, 8.06578e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * RST_N * Q * !Q_bar) + (!CP * RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.08303e+06, 7.08304e+06, 7.08303e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.98503e+06, 6.98503e+06, 6.98502e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * RST_N * Q * !Q_bar) + (!CP * RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.1023e+06, 7.1023e+06, 7.1023e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.96584e+06, 6.96584e+06, 6.96583e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * !RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.99907e+06, 6.99907e+06, 6.99907e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.94104e+06, 6.94104e+06, 6.94107e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * !RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.01841e+06, 7.01841e+06, 7.01841e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.9218e+06, 6.9218e+06, 6.92183e+06" \
          );
        }
      }
    }
    pin (RST_N) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 282.577;
      rise_capacitance : 282.577;
      rise_capacitance_range (106.817, 527.919);
      fall_capacitance : 283.351;
      fall_capacitance_range (106.843, 530.044);
      internal_power () {
        when : "(CP * !Q * Q_bar) + (!CP * !D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.09257e+06, 8.09257e+06, 8.09257e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.06783e+06, 8.06783e+06, 8.06783e+06" \
          );
        }
      }
      internal_power () {
        when : "(CP * !Q * Q_bar) + (!CP * !D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.15118e+06, 8.15118e+06, 8.15119e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "8.00963e+06, 8.00963e+06, 8.00963e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.02973e+06, 7.02973e+06, 7.02974e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.97026e+06, 6.97026e+06, 6.97026e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "7.08838e+06, 7.08838e+06, 7.08839e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.91195e+06, 6.91195e+06, 6.91195e+06" \
          );
        }
      }
    }
    ff (IQ,IQ_bar) {
      clear : "!RST_N";
      clocked_on : "CP";
      next_state : "D";
      power_down_function : "(!VDD) + (VSS)";
    }
  }
  cell (DFFX1) {
    area : 1413984;
    cell_leakage_power : 138355;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 157331;
      when : "(CP * D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 119630;
      when : "(CP * !D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 157133;
      when : "(!CP * D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 157134;
      when : "(!CP * D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 119452;
      when : "(!CP * !D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 119452;
      when : "(!CP * !D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 138355;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.14302e+06, 5.34797e+06, 5.5522e+06", \
            "5.14281e+06, 5.34721e+06, 5.55302e+06", \
            "5.14175e+06, 5.34646e+06, 5.55185e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.29666e+06, 2.49059e+06, 2.68972e+06", \
            "2.29667e+06, 2.48893e+06, 2.68732e+06", \
            "2.29671e+06, 2.49116e+06, 2.68804e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.90593e+06, 2.94487e+06, 2.98198e+06", \
            "2.90725e+06, 2.94634e+06, 2.98324e+06", \
            "2.90631e+06, 2.94527e+06, 2.98237e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "718611, 727634, 737960", \
            "718576, 727672, 737390", \
            "718955, 728109, 738027" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.39029e+06, 5.59576e+06, 5.79962e+06", \
            "5.39143e+06, 5.59628e+06, 5.80108e+06", \
            "5.39131e+06, 5.59716e+06, 5.80138e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.30397e+06, 2.49684e+06, 2.69464e+06", \
            "2.3039e+06, 2.49699e+06, 2.69438e+06", \
            "2.30396e+06, 2.49718e+06, 2.69451e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.95146e+06, 3.99044e+06, 4.02754e+06", \
            "3.94775e+06, 3.98681e+06, 4.0239e+06", \
            "3.9404e+06, 3.97943e+06, 4.01647e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "719830, 729016, 738323", \
            "719568, 728869, 738908", \
            "719582, 729078, 738915" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(CP & D)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698971, 721586, 742854", \
            "698985, 721600, 742863", \
            "699099, 721663, 742928" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301790, 309763, 318111", \
            "301789, 309743, 318092", \
            "301824, 309795, 318067" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "~CP";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!CP";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698635, 721177, 742402", \
            "698553, 721160, 742417", \
            "698684, 721181, 742330" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301790, 309784, 318121", \
            "301787, 309761, 318114", \
            "301813, 309795, 318088" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27531e+06, 2.45174e+06, 2.62939e+06", \
            "2.2751e+06, 2.45247e+06, 2.6281e+06", \
            "2.27534e+06, 2.45175e+06, 2.62942e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.23168e+06, 2.42997e+06, 2.62766e+06", \
            "2.23149e+06, 2.4275e+06, 2.62701e+06", \
            "2.23168e+06, 2.42975e+06, 2.62766e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698971, 721586, 742854", \
            "698985, 721600, 742863", \
            "699099, 721663, 742928" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301790, 309763, 318111", \
            "301789, 309743, 318092", \
            "301824, 309795, 318067" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "861265, 861120, 860988", \
            "861265, 861112, 861001", \
            "861265, 861116, 860996" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "255360, 254003, 252561", \
            "255360, 254000, 252562", \
            "255348, 253987, 252546" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "882468, 882354, 882256", \
            "882468, 882346, 882269", \
            "882469, 882351, 882265" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272391, 271773, 271212", \
            "272393, 271773, 271215", \
            "272384, 271763, 271202" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "877497, 877303, 877128", \
            "877487, 877290, 877114", \
            "877418, 877225, 877048" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "313621, 312282, 310861", \
            "313599, 312261, 310839", \
            "313560, 312230, 310809" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "907098, 906970, 906743", \
            "907073, 906877, 906718", \
            "906970, 906539, 906635" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "285175, 284532, 283934", \
            "285153, 284603, 283944", \
            "285115, 284667, 284403" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "IQ_bar";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.46113e+06, 5.66604e+06, 5.8707e+06", \
            "5.4631e+06, 5.66734e+06, 5.87277e+06", \
            "5.46052e+06, 5.6662e+06, 5.87047e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.2963e+06, 2.49092e+06, 2.68956e+06", \
            "2.29654e+06, 2.48876e+06, 2.68751e+06", \
            "2.29634e+06, 2.4912e+06, 2.68759e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.58847e+06, 2.62713e+06, 2.66394e+06", \
            "2.58839e+06, 2.62705e+06, 2.66387e+06", \
            "2.58831e+06, 2.62706e+06, 2.66372e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "709968, 719718, 729791", \
            "709968, 719717, 729821", \
            "709716, 719717, 729535" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.52004e+06, 6.72602e+06, 6.93142e+06", \
            "6.516e+06, 6.721e+06, 6.92616e+06", \
            "6.50912e+06, 6.71452e+06, 6.92e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.30401e+06, 2.4977e+06, 2.69562e+06", \
            "2.30384e+06, 2.49792e+06, 2.69594e+06", \
            "2.30396e+06, 2.49791e+06, 2.6961e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.797e+06, 2.83567e+06, 2.87241e+06", \
            "2.79682e+06, 2.83549e+06, 2.87242e+06", \
            "2.79748e+06, 2.83602e+06, 2.87293e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "712242, 721974, 732033", \
            "712226, 721967, 731782", \
            "712233, 722041, 732026" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(CP & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698978, 721594, 742862", \
            "698992, 721607, 742871", \
            "699105, 721670, 742933" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301792, 309766, 318113", \
            "301791, 309746, 318095", \
            "301825, 309794, 318064" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "~CP";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!CP";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698631, 721170, 742390", \
            "698554, 721161, 742416", \
            "698671, 721165, 742310" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301790, 309780, 318116", \
            "301787, 309767, 318115", \
            "301808, 309790, 318084" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27534e+06, 2.45175e+06, 2.62945e+06", \
            "2.27493e+06, 2.45252e+06, 2.62982e+06", \
            "2.27537e+06, 2.45177e+06, 2.62948e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.23179e+06, 2.42755e+06, 2.62778e+06", \
            "2.23175e+06, 2.42762e+06, 2.62778e+06", \
            "2.23179e+06, 2.42756e+06, 2.62778e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698978, 721594, 742862", \
            "698992, 721607, 742871", \
            "699105, 721670, 742933" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301792, 309766, 318113", \
            "301791, 309746, 318095", \
            "301825, 309794, 318064" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "676464, 676314, 676194", \
            "676472, 676313, 676199", \
            "676458, 676317, 676188" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "306635, 305255, 303792", \
            "306632, 305253, 303788", \
            "306623, 305240, 303778" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "692702, 692581, 692496", \
            "692709, 692581, 692501", \
            "692697, 692586, 692491" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "328849, 328226, 327661", \
            "328847, 328224, 327659", \
            "328840, 328215, 327653" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "736361, 736174, 736000", \
            "736335, 736141, 735968", \
            "736279, 736094, 735927" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "321008, 319618, 318144", \
            "320987, 319597, 318118", \
            "320911, 319524, 318044" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "706784, 706601, 706437", \
            "706772, 706583, 706416", \
            "706784, 705579, 705726" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "351719, 351081, 350466", \
            "351834, 351227, 350041", \
            "351895, 350346, 350667" \
          );
        }
      }
    }
    pin (CP) {
      clock : true;
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 188.512;
      rise_capacitance : 188.512;
      rise_capacitance_range (71.212, 352.531);
      fall_capacitance : 188.575;
      fall_capacitance_range (71.2146, 352.471);
      internal_power () {
        when : "(D * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.74448e+06, 4.74448e+06, 4.74448e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.72841e+06, 4.72841e+06, 4.72839e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.78678e+06, 4.78678e+06, 4.78678e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.68625e+06, 4.68624e+06, 4.68622e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "3.61706e+06, 3.61706e+06, 3.61705e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "3.59662e+06, 3.59664e+06, 3.59661e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "3.64943e+06, 3.64943e+06, 3.64943e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "3.56433e+06, 3.56435e+06, 3.56432e+06" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 8917.97;
      rise_capacitance : 8917.97;
      rise_capacitance_range (8144.4, 9951.06);
      fall_capacitance : 9222.45;
      fall_capacitance_range (8353.38, 10443.9);
      internal_power () {
        when : "(!CP * Q * !Q_bar) + (!CP * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.72166e+06, 4.72162e+06, 4.72149e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "3.60366e+06, 3.60362e+06, 3.60352e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * Q * !Q_bar) + (!CP * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.7713e+06, 4.77137e+06, 4.77123e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "3.55433e+06, 3.55428e+06, 3.55424e+06" \
          );
        }
      }
    }
    latch (IQ,IQ_bar) {
      data_in : "D";
      enable : "CP";
      power_down_function : "(!VDD) + (VSS)";
    }
  }
  cell (INVX1) {
    area : 228420;
    cell_leakage_power : 19721.6;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 38480.8;
      when : "(A * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 962.376;
      when : "(!A * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 19721.6;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "!A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "930279, 1.12385e+06, 1.30688e+06", \
            "927162, 1.12063e+06, 1.30406e+06", \
            "918299, 1.11174e+06, 1.29572e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "787032, 1.00564e+06, 1.22416e+06", \
            "787045, 1.00564e+06, 1.22439e+06", \
            "787145, 1.00554e+06, 1.22439e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "38366, 44196.2, 49982.6", \
            "38953.2, 44783.3, 50575.3", \
            "40773.2, 46591.3, 52367.1" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "21541.2, 27493, 33446.2", \
            "21541.2, 27493, 33446", \
            "21541.2, 27492.9, 33446" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "18605.2, 18951.5, 19070.5", \
            "18544.3, 18896.4, 19025.2", \
            "18372.6, 18738, 18893" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3866.98, 3748.39, 3625.01", \
            "3827.67, 3710.12, 3587.28", \
            "3708.82, 3594.72, 3474.31" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "-5110.59, -4900.6, -4919.95", \
            "-5129.99, -4961.95, -4968.56", \
            "-5286.07, -5164.03, -5147.34" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "27578.9, 27656.9, 27731.8", \
            "27557.1, 27634.7, 27701.7", \
            "27409.3, 27462.2, 27508.5" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 12962.4;
      rise_capacitance : 13087.4;
      rise_capacitance_range (12022.2, 14052.3);
      fall_capacitance : 12962.4;
      fall_capacitance_range (11999.7, 13806);
    }
  }
  cell (LATCHX1) {
    area : 586500;
    cell_leakage_power : 47789.9;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 76960.9;
      when : "(R * S * !Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(R * S * !Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40702.3;
      when : "(R * !S * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(R * !S * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40702.3;
      when : "(!R * S * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * S * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40291.9;
      when : "(!R * !S * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * !S * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40291.9;
      when : "(!R * !S * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * !S * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 47789.9;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "!R";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~R & S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698423, 720976, 742299", \
            "698442, 720991, 742318", \
            "698459, 721020, 742362" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301633, 309856, 317937", \
            "301632, 309850, 317933", \
            "301621, 309568, 318166" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698452, 721023, 742276", \
            "698470, 721042, 742294", \
            "698435, 720995, 742311" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301634, 309862, 318230", \
            "301633, 309856, 318226", \
            "301627, 309582, 318166" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27333e+06, 2.45072e+06, 2.62841e+06", \
            "2.27355e+06, 2.45107e+06, 2.62879e+06", \
            "2.27379e+06, 2.45149e+06, 2.62885e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.2286e+06, 2.42419e+06, 2.62446e+06", \
            "2.2286e+06, 2.42411e+06, 2.62442e+06", \
            "2.2286e+06, 2.42404e+06, 2.62443e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698423, 720976, 742299", \
            "698442, 720991, 742318", \
            "698459, 721020, 742362" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301633, 309856, 317937", \
            "301632, 309850, 317933", \
            "301621, 309568, 318166" \
          );
        }
      }
      timing () {
        related_pin : "R";
        sdf_cond : "S";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "S";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "657260, 681624, 704302", \
            "657275, 681641, 704320", \
            "657289, 681684, 704389" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "304164, 312231, 321241", \
            "304163, 312232, 321239", \
            "304136, 312498, 321173" \
          );
        }
      }
      timing () {
        related_pin : "R";
        sdf_cond : "~S";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!S";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "657002, 681388, 704086", \
            "657017, 681405, 704104", \
            "657032, 681468, 704201" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "304174, 312530, 321277", \
            "304173, 312560, 321275", \
            "304116, 312500, 321175" \
          );
        }
      }
      timing () {
        related_pin : "R";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.0981e+06, 2.27011e+06, 2.44137e+06", \
            "2.09819e+06, 2.27016e+06, 2.44144e+06", \
            "2.09865e+06, 2.2688e+06, 2.44051e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.22191e+06, 2.42118e+06, 2.62471e+06", \
            "2.22191e+06, 2.42117e+06, 2.62471e+06", \
            "2.22196e+06, 2.42295e+06, 2.62568e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "657260, 681624, 704302", \
            "657275, 681641, 704320", \
            "657289, 681684, 704389" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "304164, 312231, 321241", \
            "304163, 312232, 321239", \
            "304136, 312498, 321173" \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational_rise;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.05039e+06, 3.24636e+06, 3.44217e+06", \
            "3.0504e+06, 3.24638e+06, 3.4422e+06", \
            "3.04959e+06, 3.24599e+06, 3.44187e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.25195e+06, 2.44793e+06, 2.64794e+06", \
            "2.25195e+06, 2.44793e+06, 2.64794e+06", \
            "2.25195e+06, 2.44788e+06, 2.64796e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "S";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "84890.5, 84507.2, 84137.8", \
            "84867.4, 84484.1, 84114.7", \
            "84799.8, 84412.9, 84044.7" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "S";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "107828, 107677, 107542", \
            "107803, 107653, 107517", \
            "107731, 107579, 107443" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "!S";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "35417.5, 33346.4, 31234.8", \
            "35410.5, 33339, 31227.1", \
            "35390.3, 33316.9, 31203.6" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "!S";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "48446.4, 48075.6, 47778.3", \
            "48441.5, 48070.8, 47773.7", \
            "48427.6, 48056.9, 47760.1" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "390253, 389953, 389695", \
            "390277, 389977, 389719", \
            "390354, 390034, 389769" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "84890.5, 84507.2, 84137.8", \
            "84867.4, 84484.1, 84114.7", \
            "84799.8, 84412.9, 84044.7" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "366814, 366271, 365785", \
            "366838, 366295, 365808", \
            "366918, 366354, 365860" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "107828, 107677, 107542", \
            "107803, 107653, 107517", \
            "107731, 107579, 107443" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "209180, 209081, 209001", \
            "209180, 209081, 209000", \
            "209177, 209075, 208996" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "217119, 217054, 217014", \
            "217118, 217054, 217014", \
            "217116, 217048, 217009" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "!S";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "Q";
        sdf_cond : "(R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698423, 720976, 742299", \
            "698442, 720991, 742318", \
            "698459, 721020, 742362" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301633, 309856, 317937", \
            "301632, 309850, 317933", \
            "301621, 309568, 318166" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(~R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698452, 721023, 742276", \
            "698470, 721042, 742294", \
            "698435, 720995, 742311" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301634, 309862, 318230", \
            "301633, 309856, 318226", \
            "301627, 309582, 318166" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27333e+06, 2.45072e+06, 2.62841e+06", \
            "2.27355e+06, 2.45107e+06, 2.62879e+06", \
            "2.27379e+06, 2.45149e+06, 2.62885e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.2286e+06, 2.42419e+06, 2.62446e+06", \
            "2.2286e+06, 2.42411e+06, 2.62442e+06", \
            "2.2286e+06, 2.42404e+06, 2.62443e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "698423, 720976, 742299", \
            "698442, 720991, 742318", \
            "698459, 721020, 742362" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "301633, 309856, 317937", \
            "301632, 309850, 317933", \
            "301621, 309568, 318166" \
          );
        }
      }
      timing () {
        related_pin : "R";
        timing_sense : positive_unate;
        timing_type : combinational_rise;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.05039e+06, 3.24636e+06, 3.44217e+06", \
            "3.0504e+06, 3.24638e+06, 3.4422e+06", \
            "3.04959e+06, 3.24599e+06, 3.44187e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.25195e+06, 2.44793e+06, 2.64794e+06", \
            "2.25195e+06, 2.44793e+06, 2.64794e+06", \
            "2.25195e+06, 2.44788e+06, 2.64796e+06" \
          );
        }
      }
      timing () {
        related_pin : "S";
        sdf_cond : "R";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "R";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "657260, 681624, 704302", \
            "657275, 681641, 704320", \
            "657289, 681684, 704389" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "304164, 312231, 321241", \
            "304163, 312232, 321239", \
            "304136, 312498, 321173" \
          );
        }
      }
      timing () {
        related_pin : "S";
        sdf_cond : "~R";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!R";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "657002, 681388, 704086", \
            "657017, 681405, 704104", \
            "657032, 681468, 704201" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "304174, 312530, 321277", \
            "304173, 312560, 321275", \
            "304116, 312500, 321175" \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.0981e+06, 2.27011e+06, 2.44137e+06", \
            "2.09819e+06, 2.27016e+06, 2.44144e+06", \
            "2.09865e+06, 2.2688e+06, 2.44051e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.22191e+06, 2.42118e+06, 2.62471e+06", \
            "2.22191e+06, 2.42117e+06, 2.62471e+06", \
            "2.22196e+06, 2.42295e+06, 2.62568e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "657260, 681624, 704302", \
            "657275, 681641, 704320", \
            "657289, 681684, 704389" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "304164, 312231, 321241", \
            "304163, 312232, 321239", \
            "304136, 312498, 321173" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "209180, 209081, 209001", \
            "209180, 209081, 209000", \
            "209177, 209075, 208996" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "217119, 217054, 217014", \
            "217118, 217054, 217014", \
            "217116, 217048, 217009" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "R";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "84890.5, 84507.2, 84137.8", \
            "84867.4, 84484.1, 84114.7", \
            "84799.8, 84412.9, 84044.7" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "R";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "107828, 107677, 107542", \
            "107803, 107653, 107517", \
            "107731, 107579, 107443" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "!R";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "35417.5, 33346.4, 31234.8", \
            "35410.5, 33339, 31227.1", \
            "35390.3, 33316.9, 31203.6" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "!R";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "48446.4, 48075.6, 47778.3", \
            "48441.5, 48070.8, 47773.7", \
            "48427.6, 48056.9, 47760.1" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "390253, 389953, 389695", \
            "390277, 389977, 389719", \
            "390354, 390034, 389769" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "84890.5, 84507.2, 84137.8", \
            "84867.4, 84484.1, 84114.7", \
            "84799.8, 84412.9, 84044.7" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "366814, 366271, 365785", \
            "366838, 366295, 365808", \
            "366918, 366354, 365860" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "107828, 107677, 107542", \
            "107803, 107653, 107517", \
            "107731, 107579, 107443" \
          );
        }
      }
    }
    pin (R) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5833;
      rise_capacitance : 94.5849;
      rise_capacitance_range (35.6342, 177.04);
      fall_capacitance : 94.5833;
      fall_capacitance_range (35.6364, 176.875);
      internal_power () {
        when : "(!S * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.22097e+06, 1.22097e+06, 1.22097e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.2088e+06, 1.2088e+06, 1.2088e+06" \
          );
        }
      }
      internal_power () {
        when : "(!S * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.23673e+06, 1.23673e+06, 1.23673e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.19304e+06, 1.19304e+06, 1.19304e+06" \
          );
        }
      }
    }
    pin (S) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5833;
      rise_capacitance : 94.5849;
      rise_capacitance_range (35.6342, 177.04);
      fall_capacitance : 94.5833;
      fall_capacitance_range (35.6364, 176.875);
      internal_power () {
        when : "(!R * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.22097e+06, 1.22097e+06, 1.22097e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.2088e+06, 1.2088e+06, 1.2088e+06" \
          );
        }
      }
      internal_power () {
        when : "(!R * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.23673e+06, 1.23673e+06, 1.23673e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.19304e+06, 1.19304e+06, 1.19304e+06" \
          );
        }
      }
    }
  }
  cell (NAND2X1) {
    area : 247860;
    cell_leakage_power : 10006.5;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 37764.8;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 813.417;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 961.852;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 485.816;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 10006.5;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(!A1) + (!A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.40796e+06, 1.55312e+06, 1.70537e+06", \
            "1.40832e+06, 1.55355e+06, 1.70557e+06", \
            "1.40804e+06, 1.55344e+06, 1.70538e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "970018, 1.15596e+06, 1.35282e+06", \
            "970035, 1.15606e+06, 1.35288e+06", \
            "970018, 1.15606e+06, 1.35246e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "647870, 683376, 715814", \
            "647918, 683347, 715754", \
            "648056, 683638, 716062" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275620, 289979, 304750", \
            "275589, 290003, 304796", \
            "275712, 289952, 304737" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.78869e+06, 1.9552e+06, 2.1226e+06", \
            "1.7899e+06, 1.95518e+06, 2.12321e+06", \
            "1.78861e+06, 1.95511e+06, 2.12249e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.73841e+06, 1.93378e+06, 2.13282e+06", \
            "1.73839e+06, 1.93378e+06, 2.13289e+06", \
            "1.7384e+06, 1.93378e+06, 2.13282e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "820268, 870388, 914436", \
            "820523, 870387, 914417", \
            "820434, 870340, 914362" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "299398, 318223, 337187", \
            "299233, 318223, 337188", \
            "299231, 318235, 337187" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "27637, 27223.1, 26960", \
            "27668.5, 27256, 26987.5", \
            "27730.4, 27322.4, 27047.7" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "33504.5, 32954.5, 32428", \
            "33479.7, 32932.7, 32407.2", \
            "33405.7, 32853.6, 32327.9" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4314.42, 3638.25, 3152.38", \
            "4346, 3671.15, 3180.54", \
            "4411.94, 3741.13, 3243.61" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "56192.3, 55872.7, 55574.6", \
            "56166.1, 55849.4, 55552.3", \
            "56085.2, 55763, 55465.2" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "40572.7, 40400.9, 40300.8", \
            "40620.1, 40423.4, 40337.4", \
            "40663.3, 40491.1, 40390.7" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "38169.6, 37307.6, 36537.3", \
            "38144.7, 37284.6, 36514", \
            "38076.9, 37216.9, 36446.5" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4325.65, 3894.98, 3542.68", \
            "4375.9, 3917.56, 3579.29", \
            "4416.71, 3986.14, 3633.37" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "73700.9, 73045.7, 72479.7", \
            "73673.1, 73020.9, 72452.7", \
            "73601.9, 72948.8, 72382.3" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 93.2089;
      rise_capacitance : 93.2089;
      rise_capacitance_range (35.3887, 176.363);
      fall_capacitance : 93.2133;
      fall_capacitance_range (35.3887, 176.39);
      internal_power () {
        when : "(!A2 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "14185.8, 14185.8, 14189.8" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "23638.8, 23638.8, 23634.2" \
          );
        }
      }
      internal_power () {
        when : "(!A2 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "24720.8, 24721.2, 24735.1" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "13186.1, 13185.8, 13171.4" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.2884;
      rise_capacitance : 94.2884;
      rise_capacitance_range (35.605, 176.509);
      fall_capacitance : 94.468;
      fall_capacitance_range (35.6139, 176.842);
      internal_power () {
        when : "(!A1 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "28622.8, 28622.6, 28623.2" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "19603.1, 19603.4, 19603.7" \
          );
        }
      }
      internal_power () {
        when : "(!A1 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "52106.7, 52106.6, 52112.5" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "-3602.95, -3602.69, -3604.23" \
          );
        }
      }
    }
  }
  cell (NOR2X1) {
    area : 399500;
    cell_leakage_power : 29419.6;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 38838.8;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 38480.4;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 38480.4;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 1878.6;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 29419.6;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(!A1 * !A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.64104e+06, 1.80044e+06, 1.9637e+06", \
            "1.64112e+06, 1.80051e+06, 1.96375e+06", \
            "1.64127e+06, 1.79957e+06, 1.96321e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.36173e+06, 1.56706e+06, 1.77661e+06", \
            "1.36173e+06, 1.56706e+06, 1.77661e+06", \
            "1.36194e+06, 1.56715e+06, 1.7765e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "630722, 657308, 681636", \
            "630733, 657321, 681650", \
            "630672, 657262, 681669" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272411, 282520, 292705", \
            "272410, 282519, 292702", \
            "272343, 282462, 292726" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.64104e+06, 1.80044e+06, 1.9637e+06", \
            "1.64112e+06, 1.80051e+06, 1.96375e+06", \
            "1.64127e+06, 1.79957e+06, 1.96321e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.36173e+06, 1.56706e+06, 1.77661e+06", \
            "1.36173e+06, 1.56706e+06, 1.77661e+06", \
            "1.36194e+06, 1.56715e+06, 1.7765e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "630722, 657308, 681636", \
            "630733, 657321, 681650", \
            "630672, 657262, 681669" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272411, 282520, 292705", \
            "272410, 282519, 292702", \
            "272343, 282462, 292726" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "39875, 39494.4, 39195.4", \
            "39899.4, 39518.6, 39219.3", \
            "39971.8, 39568.1, 39275.7" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "32749.6, 32330.7, 31935.1", \
            "32726.4, 32307.5, 31911.8", \
            "32661.1, 32241.7, 31842.7" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "8960.93, 8299.63, 7749.42", \
            "8985.51, 8323.87, 7773.4", \
            "9058.46, 8375.58, 7832.01" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "62572.1, 62400.6, 62253.1", \
            "62546.5, 62374.8, 62227.1", \
            "62474.6, 62301.7, 62150.1" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "39875, 39494.4, 39195.4", \
            "39899.4, 39518.6, 39219.3", \
            "39971.8, 39568.1, 39275.7" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "32749.6, 32330.7, 31935.1", \
            "32726.4, 32307.5, 31911.8", \
            "32661.1, 32241.7, 31842.7" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "8960.93, 8299.63, 7749.42", \
            "8985.51, 8323.87, 7773.4", \
            "9058.46, 8375.58, 7832.01" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "62572.1, 62400.6, 62253.1", \
            "62546.5, 62374.8, 62227.1", \
            "62474.6, 62301.7, 62150.1" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5552;
      rise_capacitance : 94.5552;
      rise_capacitance_range (35.6344, 177.039);
      fall_capacitance : 94.5843;
      fall_capacitance_range (35.6365, 177.064);
      internal_power () {
        when : "(A2 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16493e+06, 1.16493e+06, 1.16493e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.1546e+06, 1.1546e+06, 1.1546e+06" \
          );
        }
      }
      internal_power () {
        when : "(A2 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.18075e+06, 1.18075e+06, 1.18075e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.13877e+06, 1.13877e+06, 1.13877e+06" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5552;
      rise_capacitance : 94.5552;
      rise_capacitance_range (35.6344, 177.039);
      fall_capacitance : 94.5843;
      fall_capacitance_range (35.6365, 177.064);
      internal_power () {
        when : "(A1 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16493e+06, 1.16493e+06, 1.16493e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.1546e+06, 1.1546e+06, 1.1546e+06" \
          );
        }
      }
      internal_power () {
        when : "(A1 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.18075e+06, 1.18075e+06, 1.18075e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.13877e+06, 1.13877e+06, 1.13877e+06" \
          );
        }
      }
    }
  }

cell (TSBUF) {
  area : 446148;
  cell_leakage_power : 22.85;
  pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
  }
  leakage_power () {
    value : 333.79;
    when : "!I !OE !Y";
  }
  leakage_power () {
    value : 333.79;
    when : "!I !OE Y";
  }
  leakage_power () {
    value : 1914.1;
    when : "!I OE !Y";
  }
  leakage_power () {
    value : 1933.2;
    when : "I !OE !Y";
  }
  leakage_power () {
    value : 1933.2;
    when : "I !OE Y";
  }
  leakage_power () {
    value : 22.85;
    when : "I OE Y";
  }
  pin(I) {
    direction : input;
    related_ground_pin : VSS;
    related_power_pin : VDD;
    capacitance : 94.5598;
    rise_capacitance : 94.5787;
    rise_capacitance_range (35.6332, 177.04);
    fall_capacitance : 94.5598;
    fall_capacitance_range (35.6344, 176.765);
    internal_power () {
      when : "!OE&Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16493e+06, 1.16493e+06, 1.16493e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.1546e+06, 1.1546e+06, 1.1546e+06" \
          );
      }
    }
    internal_power () {
      when : "!OE&!Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.18075e+06, 1.18075e+06, 1.18075e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.13877e+06, 1.13877e+06, 1.13877e+06" \
          );
      }
    }
  }
  pin(OE) {
    direction : input;
    related_ground_pin : VSS;
    related_power_pin : VDD;
    max_transition : 5000;
    capacitance : 94.5598;
    rise_capacitance : 94.5787;
    rise_capacitance_range (35.6332, 177.04);
    fall_capacitance : 94.5598;
    fall_capacitance_range (35.6344, 176.765);
    internal_power () {
      when : "I&Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16493e+06, 1.16493e+06, 1.16493e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.1546e+06, 1.1546e+06, 1.1546e+06" \
          );
      }
    }
    internal_power () {
      when : "!I&!Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.18075e+06, 1.18075e+06, 1.18075e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.13877e+06, 1.13877e+06, 1.13877e+06" \
          );
      }
    }
  }
  pin(Y) {
    direction : output;
    function : "I";
    three_state : "(!OE)";
    max_capacitance : 20000;
    timing () {
      related_pin : "I";
      timing_sense : positive_unate;
      timing_type : combinational;
      cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.9911e+06, 2.17241e+06, 2.15338e+06", \
            "1.99106e+06, 2.17239e+06, 2.15336e+06", \
            "1.9909e+06, 2.17272e+06, 2.15392e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.03597e+06, 2.22967e+06, 2.4287e+06", \
            "2.03593e+06, 2.22968e+06, 2.4287e+06", \
            "2.03471e+06, 2.23015e+06, 2.42939e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "745204, 775753, 0.80482e+06", \
            "745218, 775792, 0.80483e+06", \
            "745238, 775837, 0.80493e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "290290, 303787, 317796", \
            "290293, 303798, 317779", \
            "290304, 303800, 317796" \
          );
        }
    }
    timing () {
      related_pin : "OE";
      timing_sense : positive_unate;
      timing_type : three_state_enable;
      cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.75313e+06, 1.92844e+06, 2.10298e+06", \
            "1.75315e+06, 1.92843e+06, 2.10218e+06", \
            "1.75312e+06, 1.92754e+06, 2.10254e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.04151e+06, 2.24092e+06, 2.44397e+06", \
            "2.04151e+06, 2.24092e+06, 2.44395e+06", \
            "2.04143e+06, 2.24073e+06, 2.44368e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "678849, 711663, 742829", \
            "678848, 711662, 742834", \
            "678669, 711390, 742712" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "290594, 305373, 319581", \
            "290569, 305373, 319738", \
            "290358, 305100, 319620" \
          );
        }
    }
    timing () {
      related_pin : "OE";
      timing_sense : negative_unate;
      timing_type : three_state_disable;
      cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.64413e+06, 1.78694e+06, 1.93729e+06", \
            "1.64485e+06, 1.787e+06, 1.93734e+06", \
            "1.64462e+06, 1.7874e+06, 1.93728e+06" \
          );
      }
      rise_transition (scalar) {
        values ( \
          "0" \
        );
      }
      cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "360989, 381016, 399216", \
            "361008, 381042, 399246", \
            "361132, 381187, 399422" \
          );
      }
      fall_transition (scalar) {
        values ( \
          "0" \
        );
      }
    }
    internal_power () {
      related_pin : "I";
      rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "34542.7, 32660.2, 31089.5", \
            "34626.2, 32709.4, 31138.3", \
            "34770, 32874.7, 31287.8" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "19298, 19272, 19252", \
            "19292, 19267, 19246", \
            "19274, 19248, 19227" \
          );
      }
    }
    internal_power () {
      related_pin : "OE";
      rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "34542.7, 32660.2, 31089.5", \
            "34626.2, 32709.4, 31138.3", \
            "34770, 32874.7, 31287.8" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "19298, 19272, 19252", \
            "19292, 19267, 19246", \
            "19274, 19248, 19227" \
          );
      }
    }
  }
}

cell (AND2X1) {
    area : 433500;
    cell_leakage_power : 39090.3;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 38741.1;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39264.2;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39407;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 38949;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39090.3;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1 * A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.55422e+06, 1.72064e+06, 1.88788e+06", \
            "1.55425e+06, 1.72053e+06, 1.88776e+06", \
            "1.5544e+06, 1.72091e+06, 1.88812e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "830124, 1.03954e+06, 1.25168e+06", \
            "830097, 1.03954e+06, 1.25168e+06", \
            "830122, 1.03954e+06, 1.25166e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.77812e+06, 1.82452e+06, 1.8672e+06", \
            "1.77838e+06, 1.82442e+06, 1.86702e+06", \
            "1.77863e+06, 1.82466e+06, 1.86734e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "436241, 448808, 462199", \
            "436028, 448808, 462375", \
            "436018, 448788, 462174" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.75884e+06, 1.92496e+06, 2.0902e+06", \
            "1.76042e+06, 1.92489e+06, 2.09027e+06", \
            "1.76096e+06, 1.92551e+06, 2.09208e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "844499, 1.05114e+06, 1.26122e+06", \
            "844322, 1.05114e+06, 1.26125e+06", \
            "844289, 1.05111e+06, 1.26111e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.05413e+06, 2.11487e+06, 2.16995e+06", \
            "2.05405e+06, 2.11479e+06, 2.16995e+06", \
            "2.05416e+06, 2.11487e+06, 2.17013e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "554032, 568977, 584909", \
            "554052, 568997, 584611", \
            "554232, 569233, 584644" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "184372, 184387, 184379", \
            "184377, 184389, 184383", \
            "184370, 184384, 184379" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "97758.5, 96995, 96278.5", \
            "97758.1, 96994.8, 96274.6", \
            "97748.9, 96983.3, 96267.2" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "206722, 206540, 206365", \
            "206724, 206542, 206369", \
            "206716, 206536, 206363" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "76413.6, 75848.1, 75329.6", \
            "76414.8, 75848, 75329.2", \
            "76408.2, 75843.4, 75326" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "190146, 190137, 190100", \
            "190157, 190137, 190101", \
            "190165, 190141, 190114" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "122189, 121190, 120262", \
            "122187, 121188, 120262", \
            "122178, 121179, 120256" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "225448, 225241, 225035", \
            "225460, 225241, 225037", \
            "225468, 225246, 225050" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "88880.2, 88070.1, 87338.5", \
            "88881.6, 88072.2, 87336.3", \
            "88876.5, 88070, 87337.1" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.144;
      rise_capacitance : 94.1465;
      rise_capacitance_range (35.5823, 176.201);
      fall_capacitance : 94.144;
      fall_capacitance_range (35.5823, 176.199);
      internal_power () {
        when : "(!A2 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16791e+06, 1.16791e+06, 1.16791e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.17725e+06, 1.17725e+06, 1.17725e+06" \
          );
        }
      }
      internal_power () {
        when : "(!A2 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.17845e+06, 1.17845e+06, 1.17845e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.1668e+06, 1.1668e+06, 1.16679e+06" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.3907;
      rise_capacitance : 94.3907;
      rise_capacitance_range (35.6264, 176.484);
      fall_capacitance : 94.5042;
      fall_capacitance_range (35.6299, 176.822);
      internal_power () {
        when : "(!A1 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.1818e+06, 1.1818e+06, 1.1818e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.17349e+06, 1.17349e+06, 1.17349e+06" \
          );
        }
      }
      internal_power () {
        when : "(!A1 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.20529e+06, 1.20529e+06, 1.20529e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.15028e+06, 1.15028e+06, 1.15028e+06" \
          );
        }
      }
    }
  }
  cell (OR2X1) {
    area : 563530;
    cell_leakage_power : 39746.5;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 39803.3;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39447.8;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39447.8;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40287;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39746.5;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1) + (A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.53033e+06, 1.69692e+06, 1.8644e+06", \
            "1.52998e+06, 1.69662e+06, 1.86416e+06", \
            "1.53006e+06, 1.6966e+06, 1.86367e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "822857, 1.03288e+06, 1.24544e+06", \
            "822980, 1.0329e+06, 1.24543e+06", \
            "822936, 1.03287e+06, 1.24545e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.95637e+06, 2.01005e+06, 2.06018e+06", \
            "1.95648e+06, 2.01007e+06, 2.0601e+06", \
            "1.95636e+06, 2.01007e+06, 2.06011e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "490428, 504060, 518835", \
            "490219, 504058, 519108", \
            "490226, 503789, 518789" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.53033e+06, 1.69692e+06, 1.8644e+06", \
            "1.52998e+06, 1.69662e+06, 1.86416e+06", \
            "1.53006e+06, 1.6966e+06, 1.86367e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "822857, 1.03288e+06, 1.24544e+06", \
            "822980, 1.0329e+06, 1.24543e+06", \
            "822936, 1.03287e+06, 1.24545e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.95637e+06, 2.01005e+06, 2.06018e+06", \
            "1.95648e+06, 2.01007e+06, 2.0601e+06", \
            "1.95636e+06, 2.01007e+06, 2.06011e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "490428, 504060, 518835", \
            "490219, 504058, 519108", \
            "490226, 503789, 518789" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "186498, 186538, 186554", \
            "186496, 186535, 186552", \
            "186503, 186541, 186554" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "110900, 110010, 109182", \
            "110899, 110008, 109177", \
            "110889, 109998, 109175" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "216400, 216234, 216083", \
            "216398, 216232, 216084", \
            "216404, 216241, 216082" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "83169.1, 82479.3, 81850.4", \
            "83170, 82478.5, 81847.1", \
            "83164.8, 82473.6, 81843.8" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "186498, 186538, 186554", \
            "186496, 186535, 186552", \
            "186503, 186541, 186554" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "110900, 110010, 109182", \
            "110899, 110008, 109177", \
            "110889, 109998, 109175" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "216400, 216234, 216083", \
            "216398, 216232, 216084", \
            "216404, 216241, 216082" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "83169.1, 82479.3, 81850.4", \
            "83170, 82478.5, 81847.1", \
            "83164.8, 82473.6, 81843.8" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5903;
      rise_capacitance : 94.5903;
      rise_capacitance_range (35.6457, 176.983);
      fall_capacitance : 94.6059;
      fall_capacitance_range (35.6464, 177.02);
      internal_power () {
        when : "(A2 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.19394e+06, 1.19394e+06, 1.19394e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.18355e+06, 1.18355e+06, 1.18355e+06" \
          );
        }
      }
      internal_power () {
        when : "(A2 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.20976e+06, 1.20976e+06, 1.20976e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16772e+06, 1.16772e+06, 1.16772e+06" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5903;
      rise_capacitance : 94.5903;
      rise_capacitance_range (35.6457, 176.983);
      fall_capacitance : 94.6059;
      fall_capacitance_range (35.6464, 177.02);
      internal_power () {
        when : "(A1 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.19394e+06, 1.19394e+06, 1.19394e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.18355e+06, 1.18355e+06, 1.18355e+06" \
          );
        }
      }
      internal_power () {
        when : "(A1 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.20976e+06, 1.20976e+06, 1.20976e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.16772e+06, 1.16772e+06, 1.16772e+06" \
          );
        }
      }
    }
  }
  cell (XNOR2X1) {
    area : 1347557;
    cell_leakage_power : 69209.9;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 78240.4;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 78930.1;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 78742.4;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40926.9;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 69209.9;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1 * A2) + (!A1 * !A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        sdf_cond : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.03445e+06, 5.18676e+06, 5.34381e+06", \
            "5.03395e+06, 5.18992e+06, 5.34342e+06", \
            "5.03464e+06, 5.1868e+06, 5.34328e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "913752, 1.11491e+06, 1.31971e+06", \
            "914200, 1.11416e+06, 1.31989e+06", \
            "913735, 1.11478e+06, 1.31984e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.14639e+06, 5.20682e+06, 5.26148e+06", \
            "5.14629e+06, 5.20676e+06, 5.26142e+06", \
            "5.14629e+06, 5.20674e+06, 5.26136e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "543817, 559465, 575754", \
            "543822, 559443, 575660", \
            "543870, 559574, 575851" \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "~A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.87529e+06, 4.02853e+06, 4.1818e+06", \
            "3.87641e+06, 4.03114e+06, 4.18438e+06", \
            "3.87865e+06, 4.02867e+06, 4.18179e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "907708, 1.10621e+06, 1.30985e+06", \
            "907395, 1.10568e+06, 1.30942e+06", \
            "906696, 1.1062e+06, 1.30986e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.73861e+06, 2.78741e+06, 2.83226e+06", \
            "2.73875e+06, 2.78768e+06, 2.8323e+06", \
            "2.7388e+06, 2.78748e+06, 2.83259e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "445489, 457899, 471491", \
            "445371, 457734, 471524", \
            "445374, 458000, 471320" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.88707e+06, 5.0402e+06, 5.19436e+06", \
            "4.88674e+06, 5.03824e+06, 5.19256e+06", \
            "4.88687e+06, 5.03994e+06, 5.19256e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "908961, 1.10947e+06, 1.31472e+06", \
            "908927, 1.10987e+06, 1.31506e+06", \
            "908995, 1.10952e+06, 1.31508e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.70855e+06, 5.76077e+06, 5.8082e+06", \
            "5.70884e+06, 5.76104e+06, 5.80855e+06", \
            "5.70802e+06, 5.76047e+06, 5.80781e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "463205, 475691, 488995", \
            "463257, 475863, 489036", \
            "463366, 475757, 489047" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "~A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.74114e+06, 3.89692e+06, 4.05532e+06", \
            "3.74124e+06, 3.89792e+06, 4.05423e+06", \
            "3.74185e+06, 3.89755e+06, 4.05536e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "904516, 1.10608e+06, 1.31148e+06", \
            "904511, 1.10563e+06, 1.31167e+06", \
            "904481, 1.10609e+06, 1.31162e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.78104e+06, 2.83982e+06, 2.89291e+06", \
            "2.78058e+06, 2.83936e+06, 2.89244e+06", \
            "2.78108e+06, 2.83986e+06, 2.89294e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "537657, 553476, 569658", \
            "537808, 553659, 569815", \
            "537656, 553476, 569658" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "610889, 610594, 610390", \
            "610896, 610644, 610396", \
            "610891, 610613, 610375" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "348615, 347653, 346763", \
            "348612, 347642, 346746", \
            "348618, 347659, 346767" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "641566, 641070, 640688", \
            "641573, 641121, 640695", \
            "641569, 641092, 640677" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "318433, 317646, 316931", \
            "318433, 317641, 316920", \
            "318436, 317656, 316932" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "305985, 305740, 305484", \
            "306040, 305791, 305538", \
            "306138, 305838, 305580" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "219586, 218818, 218078", \
            "219559, 218799, 218056", \
            "219482, 218721, 217984" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "274243, 273800, 273365", \
            "274298, 273849, 273419", \
            "274393, 273887, 273466" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "251998, 251417, 250863", \
            "251972, 251402, 250845", \
            "251897, 251327, 250776" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "617236, 616967, 616725", \
            "617232, 616945, 616687", \
            "617239, 616969, 616704" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "376279, 375433, 374664", \
            "376284, 375436, 374666", \
            "376300, 375461, 374687" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "661905, 661427, 661012", \
            "661894, 661418, 660982", \
            "661907, 661437, 661005" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "332694, 332037, 331458", \
            "332695, 332041, 331462", \
            "332712, 332065, 331483" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "311317, 311088, 310898", \
            "311337, 311119, 310904", \
            "311413, 311182, 310982" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "236380, 235435, 234558", \
            "236346, 235404, 234527", \
            "236281, 235336, 234458" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "269668, 269240, 268875", \
            "269689, 269272, 268881", \
            "269764, 269332, 268959" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "283053, 282279, 281567", \
            "283015, 282242, 281539", \
            "282955, 282181, 281469" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 186.902;
      rise_capacitance : 186.902;
      rise_capacitance_range (71.005, 349.505);
      fall_capacitance : 187.242;
      fall_capacitance_range (71.0135, 350.665);
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 187.195;
      rise_capacitance : 187.299;
      rise_capacitance_range (71.0355, 349.469);
      fall_capacitance : 187.195;
      fall_capacitance_range (71.0124, 350.569);
    }
  }
  cell (XOR2X1) {
    area : 1042800;
    cell_leakage_power : 49497.3;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 77263;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40485.5;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 40291.3;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 39949.5;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 49497.3;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1 * !A2) + (!A1 * A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        sdf_cond : "~A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.40818e+06, 2.53992e+06, 2.67628e+06", \
            "2.40815e+06, 2.53896e+06, 2.67755e+06", \
            "2.40822e+06, 2.54005e+06, 2.67762e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.07398e+06, 1.2374e+06, 1.41678e+06", \
            "1.07424e+06, 1.23798e+06, 1.41547e+06", \
            "1.07424e+06, 1.23838e+06, 1.41547e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.71132e+06, 2.77722e+06, 2.83843e+06", \
            "2.71156e+06, 2.7773e+06, 2.83858e+06", \
            "2.71159e+06, 2.77742e+06, 2.8387e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "822074, 835742, 850734", \
            "821660, 835870, 850494", \
            "821658, 835437, 850081" \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.89285e+06, 5.03658e+06, 5.18532e+06", \
            "4.89291e+06, 5.03733e+06, 5.18628e+06", \
            "4.89238e+06, 5.03547e+06, 5.18463e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.70876e+06, 1.90598e+06, 2.11124e+06", \
            "1.70856e+06, 1.90589e+06, 2.11098e+06", \
            "1.70866e+06, 1.90663e+06, 2.11218e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.89795e+06, 3.97867e+06, 4.05108e+06", \
            "3.89843e+06, 3.97874e+06, 4.05082e+06", \
            "3.89798e+06, 3.97876e+06, 4.05111e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "646576, 670995, 697190", \
            "646832, 670866, 697237", \
            "646576, 670666, 697189" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "~A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.49717e+06, 2.64991e+06, 2.8078e+06", \
            "2.49677e+06, 2.64982e+06, 2.80762e+06", \
            "2.4972e+06, 2.64995e+06, 2.80784e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.66406e+06, 1.86756e+06, 2.07734e+06", \
            "1.664e+06, 1.86753e+06, 2.0773e+06", \
            "1.66406e+06, 1.86756e+06, 2.07735e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.64279e+06, 2.71898e+06, 2.78814e+06", \
            "2.64277e+06, 2.7189e+06, 2.78789e+06", \
            "2.64281e+06, 2.71895e+06, 2.78812e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "586536, 608045, 632094", \
            "586564, 607898, 632366", \
            "586535, 608115, 632134" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.4153e+06, 5.54036e+06, 5.66862e+06", \
            "5.41527e+06, 5.53962e+06, 5.66769e+06", \
            "5.41658e+06, 5.53952e+06, 5.66863e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.18993e+06, 1.33927e+06, 1.50455e+06", \
            "1.18992e+06, 1.33944e+06, 1.50504e+06", \
            "1.18914e+06, 1.33988e+06, 1.50456e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.7362e+06, 3.80831e+06, 3.87475e+06", \
            "3.7359e+06, 3.80786e+06, 3.87434e+06", \
            "3.73626e+06, 3.80838e+06, 3.87481e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "751376, 766097, 782425", \
            "751217, 766126, 782442", \
            "751375, 766086, 782425" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "425227, 424711, 424305", \
            "425257, 424747, 424331", \
            "425326, 424778, 424378" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "327380, 326024, 324758", \
            "327344, 326004, 324734", \
            "327279, 325926, 324657" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "393658, 392878, 392212", \
            "393692, 392913, 392235", \
            "393759, 392945, 392287" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "359542, 358431, 357392", \
            "359509, 358406, 357380", \
            "359445, 358329, 357295" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "246102, 245415, 244875", \
            "246101, 245392, 244902", \
            "246102, 245422, 244903" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "153999, 152940, 151937", \
            "154003, 152941, 151939", \
            "154004, 152945, 151944" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "277951, 276981, 276180", \
            "277950, 276959, 276208", \
            "277954, 276992, 276213" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "123285, 122536, 121763", \
            "123289, 122500, 121767", \
            "123288, 122500, 121768" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "405480, 404635, 403934", \
            "405502, 404640, 403940", \
            "405587, 404719, 404030" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "355495, 354376, 353327", \
            "355461, 354339, 353293", \
            "355398, 354278, 353230" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "359965, 358836, 357866", \
            "359986, 358841, 357872", \
            "360069, 358918, 357959" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "401442, 400590, 399806", \
            "401408, 400553, 399769", \
            "401348, 400495, 399711" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "314904, 314496, 314204", \
            "314900, 314496, 314200", \
            "314904, 314496, 314204" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "136812, 135468, 134237", \
            "136812, 135467, 134244", \
            "136805, 135459, 134236" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "360840, 360167, 359623", \
            "360835, 360167, 359620", \
            "360842, 360169, 359626" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "98406.8, 97304.9, 96301.4", \
            "98403.7, 97299.7, 96318.9", \
            "98402, 97292.3, 96303.2" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 186.902;
      rise_capacitance : 186.902;
      rise_capacitance_range (71.005, 349.505);
      fall_capacitance : 187.242;
      fall_capacitance_range (71.0135, 350.665);
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 187.195;
      rise_capacitance : 187.299;
      rise_capacitance_range (71.0355, 349.469);
      fall_capacitance : 187.195;
      fall_capacitance_range (71.0124, 350.569);
    }
  }

}
