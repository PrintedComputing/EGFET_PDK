library (PPDK_Standard_Library_1.6V_25C_TYP_X1) {
  /* Models written by Liberate 15.1.4.070 from Cadence Design Systems, Inc. on Do 14. Nov 13:45:31 CET 2019 */
  comment : "";
  date : "$Date: Thu Nov 14 13:41:21 2019 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 1.6);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 1e+06;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 1.6;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (TT) {
    process : 1;
    temperature : 25;
    voltage : 1.6;
  }
  default_operating_conditions : TT;
  lu_table_template (constraintX1_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 2000, 5000");
    index_2 ("1000, 2000, 5000");
  }
  lu_table_template (delayX1_3x3) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 2000, 5000");
    index_2 ("10000, 15000, 20000");
  }
  lu_table_template (mpw_constraintX1_3x3) {
    variable_1 : constrained_pin_transition;
    index_1 ("1000, 2000, 5000");
  }
  power_lut_template (passive_powerX1_3x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 2000, 5000");
  }
  power_lut_template (powerX1_3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 2000, 5000");
    index_2 ("10000, 15000, 20000");
  }
  cell (DFFNRX1) {
    area : 2776032;
    cell_leakage_power : 326122;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 355473;
      when : "(CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 353153;
      when : "(CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 353668;
      when : "(CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 354871;
      when : "(CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 306103;
      when : "(CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 353067;
      when : "(CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 306676;
      when : "(!CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 305916;
      when : "(!CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 305436;
      when : "(!CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 307235;
      when : "(!CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 306457;
      when : "(!CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * RST_N * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 305407;
      when : "(!CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * !RST_N * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 326122;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.75587e+06, 5.90902e+06, 6.06814e+06", \
            "5.75565e+06, 5.9106e+06, 6.06854e+06", \
            "5.75565e+06, 5.90853e+06, 6.06739e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.68028e+06, 2.86133e+06, 3.04796e+06", \
            "2.68028e+06, 2.86136e+06, 3.0481e+06", \
            "2.68026e+06, 2.86132e+06, 3.04812e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.13581e+07, 1.15237e+07, 1.17013e+07", \
            "1.13576e+07, 1.15268e+07, 1.16997e+07", \
            "1.13581e+07, 1.15293e+07, 1.16983e+07" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "562590, 593430, 627120", \
            "562570, 593610, 626960", \
            "562600, 593790, 627130" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "CP";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "CP";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.12122e+06, 2.28916e+06, 2.45925e+06", \
            "2.12219e+06, 2.28892e+06, 2.4571e+06", \
            "2.12226e+06, 2.28893e+06, 2.45787e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.26764e+06, 2.47083e+06, 2.67726e+06", \
            "2.26778e+06, 2.47092e+06, 2.6769e+06", \
            "2.26781e+06, 2.47092e+06, 2.67751e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~CP & RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(!CP * RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.38574e+06, 2.56518e+06, 2.74657e+06", \
            "2.38768e+06, 2.56431e+06, 2.74543e+06", \
            "2.3877e+06, 2.56433e+06, 2.74546e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.35284e+06, 3.54461e+06, 3.73876e+06", \
            "3.3527e+06, 3.5446e+06, 3.7385e+06", \
            "3.3527e+06, 3.5446e+06, 3.73869e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~CP & ~RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(!CP * !RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.38818e+06, 2.56659e+06, 2.74761e+06", \
            "2.38814e+06, 2.56672e+06, 2.74778e+06", \
            "2.38812e+06, 2.56665e+06, 2.74735e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.35237e+06, 3.54426e+06, 3.73869e+06", \
            "3.35222e+06, 3.54426e+06, 3.73853e+06", \
            "3.35222e+06, 3.54426e+06, 3.7384e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.38818e+06, 2.56659e+06, 2.74761e+06", \
            "2.38814e+06, 2.56672e+06, 2.74778e+06", \
            "2.38812e+06, 2.56665e+06, 2.74735e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.35237e+06, 3.54426e+06, 3.73869e+06", \
            "3.35222e+06, 3.54426e+06, 3.73853e+06", \
            "3.35222e+06, 3.54426e+06, 3.7384e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "803973, 848051, 888108", \
            "803827, 848134, 888206", \
            "803822, 848133, 888156" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "370870, 386854, 403459", \
            "371141, 386864, 403460", \
            "371109, 386857, 403459" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.66984e+06, 4.80633e+06, 4.94043e+06", \
            "4.6707e+06, 4.807e+06, 4.94036e+06", \
            "4.66962e+06, 4.80626e+06, 4.94034e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.20276e+06, 1.21104e+06, 1.21917e+06", \
            "1.20257e+06, 1.21092e+06, 1.21919e+06", \
            "1.20289e+06, 1.21107e+06, 1.21911e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & ~D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.70192e+06, 4.84658e+06, 4.98852e+06", \
            "4.70213e+06, 4.84739e+06, 4.98908e+06", \
            "4.70167e+06, 4.8469e+06, 4.9877e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.27824e+06, 1.28594e+06, 1.2928e+06", \
            "1.27817e+06, 1.28601e+06, 1.29279e+06", \
            "1.27836e+06, 1.28651e+06, 1.29258e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(!CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.10883e+06, 3.29499e+06, 3.47904e+06", \
            "3.1093e+06, 3.29535e+06, 3.47926e+06", \
            "3.10938e+06, 3.29527e+06, 3.47919e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "691684, 725143, 762527", \
            "691810, 725088, 762485", \
            "691831, 725270, 762555" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & ~D)";
        timing_sense : positive_unate;
        timing_type : clear;
        when : "(!CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.10961e+06, 3.29596e+06, 3.48018e+06", \
            "3.11025e+06, 3.29551e+06, 3.47975e+06", \
            "3.1095e+06, 3.29604e+06, 3.48004e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "692116, 725385, 762659", \
            "692028, 725437, 762618", \
            "692021, 725868, 762632" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.70192e+06, 4.84658e+06, 4.98852e+06", \
            "4.70213e+06, 4.84739e+06, 4.98908e+06", \
            "4.70167e+06, 4.8469e+06, 4.9877e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.27824e+06, 1.28594e+06, 1.2928e+06", \
            "1.27817e+06, 1.28601e+06, 1.29279e+06", \
            "1.27836e+06, 1.28651e+06, 1.29258e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.10009e+06, 2.09775e+06, 2.09551e+06", \
            "2.10008e+06, 2.09773e+06, 2.09548e+06", \
            "2.10004e+06, 2.09769e+06, 2.09545e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.44384e+06, 1.44098e+06, 1.43796e+06", \
            "1.44382e+06, 1.44094e+06, 1.43794e+06", \
            "1.44377e+06, 1.44086e+06, 1.43789e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.12872e+06, 2.12637e+06, 2.12413e+06", \
            "2.12871e+06, 2.12635e+06, 2.12409e+06", \
            "2.12867e+06, 2.12631e+06, 2.12407e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.47338e+06, 1.47076e+06, 1.46809e+06", \
            "1.47337e+06, 1.47072e+06, 1.46806e+06", \
            "1.47331e+06, 1.47065e+06, 1.46801e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.00756e+06, 1.0056e+06, 1.00356e+06", \
            "1.00754e+06, 1.00559e+06, 1.00355e+06", \
            "1.00751e+06, 1.00555e+06, 1.00351e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "971404, 969730, 968041", \
            "971385, 969721, 968026", \
            "971352, 969679, 967988" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.04622e+06, 1.04429e+06, 1.04235e+06", \
            "1.0462e+06, 1.0443e+06, 1.04235e+06", \
            "1.04613e+06, 1.04425e+06, 1.04225e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.01409e+06, 1.0124e+06, 1.01075e+06", \
            "1.01408e+06, 1.01241e+06, 1.01076e+06", \
            "1.01402e+06, 1.01236e+06, 1.01065e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "598419, 594610, 590939", \
            "598408, 594594, 590928", \
            "598388, 594574, 590913" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "564051, 560621, 557364", \
            "564039, 560604, 557352", \
            "564017, 560581, 557335" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "596863, 593026, 589357", \
            "596844, 593034, 589369", \
            "596834, 593006, 589343" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "563721, 560263, 557010", \
            "563700, 560272, 557020", \
            "563690, 560241, 556991" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.04622e+06, 1.04429e+06, 1.04235e+06", \
            "1.0462e+06, 1.0443e+06, 1.04235e+06", \
            "1.04613e+06, 1.04425e+06, 1.04225e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.01409e+06, 1.0124e+06, 1.01075e+06", \
            "1.01408e+06, 1.01241e+06, 1.01076e+06", \
            "1.01402e+06, 1.01236e+06, 1.01065e+06" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "IQ_bar";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.04898e+07, 1.06359e+07, 1.07878e+07", \
            "1.04892e+07, 1.06358e+07, 1.07875e+07", \
            "1.04898e+07, 1.06364e+07, 1.07876e+07" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.58693e+06, 2.76701e+06, 2.95288e+06", \
            "2.58694e+06, 2.76722e+06, 2.95312e+06", \
            "2.58696e+06, 2.76519e+06, 2.95103e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "9.21992e+06, 9.3942e+06, 9.56452e+06", \
            "9.22281e+06, 9.39239e+06, 9.56164e+06", \
            "9.21935e+06, 9.39359e+06, 9.56389e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "723054, 734463, 745395", \
            "722900, 734425, 745377", \
            "723053, 734463, 745395" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(CP & RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(CP * RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.25708e+06, 6.41653e+06, 6.58255e+06", \
            "6.25628e+06, 6.41665e+06, 6.58262e+06", \
            "6.25623e+06, 6.41713e+06, 6.58349e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.19423e+06, 2.37394e+06, 2.55626e+06", \
            "2.19357e+06, 2.37334e+06, 2.55786e+06", \
            "2.19357e+06, 2.37227e+06, 2.55609e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(~CP & RST_N)";
        timing_sense : negative_unate;
        timing_type : combinational_rise;
        when : "(!CP * RST_N)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.15904e+06, 6.29858e+06, 6.44292e+06", \
            "6.15974e+06, 6.29896e+06, 6.44363e+06", \
            "6.16012e+06, 6.30059e+06, 6.44396e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.85522e+06, 2.03586e+06, 2.22364e+06", \
            "1.85514e+06, 2.03602e+06, 2.22359e+06", \
            "1.85511e+06, 2.03531e+06, 2.22358e+06" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.25708e+06, 6.41653e+06, 6.58255e+06", \
            "6.25628e+06, 6.41665e+06, 6.58262e+06", \
            "6.25623e+06, 6.41713e+06, 6.58349e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.19423e+06, 2.37394e+06, 2.55626e+06", \
            "2.19357e+06, 2.37334e+06, 2.55786e+06", \
            "2.19357e+06, 2.37227e+06, 2.55609e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.24455e+06, 3.28851e+06, 3.33006e+06", \
            "3.24345e+06, 3.28767e+06, 3.32913e+06", \
            "3.24464e+06, 3.2887e+06, 3.33015e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "721417, 731503, 741143", \
            "721725, 731274, 741089", \
            "721412, 731279, 741131" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(CP * D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.42621e+06, 2.61979e+06, 2.81424e+06", \
            "2.42701e+06, 2.61932e+06, 2.81446e+06", \
            "2.42657e+06, 2.62005e+06, 2.81549e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.98451e+06, 3.1786e+06, 3.37564e+06", \
            "2.98495e+06, 3.17845e+06, 3.37563e+06", \
            "2.98437e+06, 3.17854e+06, 3.37498e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(CP & ~D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(CP * !D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.4261e+06, 2.62016e+06, 2.81287e+06", \
            "2.42634e+06, 2.6195e+06, 2.81302e+06", \
            "2.42735e+06, 2.62044e+06, 2.81541e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.98359e+06, 3.17893e+06, 3.37641e+06", \
            "2.98359e+06, 3.17873e+06, 3.37638e+06", \
            "2.9836e+06, 3.17877e+06, 3.37604e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(!CP * D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.42404e+06, 2.59832e+06, 2.77335e+06", \
            "2.42425e+06, 2.59801e+06, 2.77359e+06", \
            "2.4254e+06, 2.59877e+06, 2.77483e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.17211e+06, 3.36516e+06, 3.55931e+06", \
            "3.17213e+06, 3.36533e+06, 3.55928e+06", \
            "3.17226e+06, 3.36519e+06, 3.55925e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        sdf_cond : "(~CP & ~D)";
        timing_sense : negative_unate;
        timing_type : preset;
        when : "(!CP * !D)";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.42464e+06, 2.59936e+06, 2.77413e+06", \
            "2.42479e+06, 2.59863e+06, 2.77519e+06", \
            "2.42583e+06, 2.59958e+06, 2.77539e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.17342e+06, 3.3663e+06, 3.5592e+06", \
            "3.17341e+06, 3.36625e+06, 3.5593e+06", \
            "3.17346e+06, 3.36629e+06, 3.56033e+06" \
          );
        }
      }
      timing () {
        related_pin : "RST_N";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.42621e+06, 2.61979e+06, 2.81424e+06", \
            "2.42701e+06, 2.61932e+06, 2.81446e+06", \
            "2.42657e+06, 2.62005e+06, 2.81549e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.98451e+06, 3.1786e+06, 3.37564e+06", \
            "2.98495e+06, 3.17845e+06, 3.37563e+06", \
            "2.98437e+06, 3.17854e+06, 3.37498e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.49417e+06, 2.49185e+06, 2.48958e+06", \
            "2.49415e+06, 2.49184e+06, 2.48956e+06", \
            "2.49412e+06, 2.49182e+06, 2.48956e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.31733e+06, 1.31476e+06, 1.31226e+06", \
            "1.31728e+06, 1.3148e+06, 1.31232e+06", \
            "1.31726e+06, 1.31469e+06, 1.31219e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.52327e+06, 2.52096e+06, 2.51871e+06", \
            "2.52325e+06, 2.52095e+06, 2.51869e+06", \
            "2.52322e+06, 2.52093e+06, 2.51868e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.34603e+06, 1.34354e+06, 1.34117e+06", \
            "1.34598e+06, 1.34358e+06, 1.34123e+06", \
            "1.34596e+06, 1.34348e+06, 1.3411e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.87879e+06, 1.87747e+06, 1.87609e+06", \
            "1.87887e+06, 1.87747e+06, 1.87609e+06", \
            "1.87878e+06, 1.87747e+06, 1.87608e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.84252e+06, 1.84123e+06, 1.83989e+06", \
            "1.8426e+06, 1.84122e+06, 1.83989e+06", \
            "1.84252e+06, 1.84123e+06, 1.83988e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.86248e+06, 1.86111e+06, 1.8598e+06", \
            "1.86246e+06, 1.8611e+06, 1.85978e+06", \
            "1.8624e+06, 1.86105e+06, 1.85971e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(CP * !D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.82857e+06, 1.82724e+06, 1.82596e+06", \
            "1.82855e+06, 1.82723e+06, 1.82595e+06", \
            "1.82849e+06, 1.82717e+06, 1.82588e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.73578e+06, 1.73337e+06, 1.73103e+06", \
            "1.73578e+06, 1.73336e+06, 1.73103e+06", \
            "1.73578e+06, 1.73336e+06, 1.73103e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.69918e+06, 1.69677e+06, 1.69444e+06", \
            "1.69918e+06, 1.69677e+06, 1.69444e+06", \
            "1.69918e+06, 1.69677e+06, 1.69444e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.7306e+06, 1.72818e+06, 1.72582e+06", \
            "1.7306e+06, 1.72818e+06, 1.72582e+06", \
            "1.7306e+06, 1.72818e+06, 1.72581e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        when : "(!CP * !D)";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.69452e+06, 1.69211e+06, 1.68975e+06", \
            "1.69452e+06, 1.69211e+06, 1.68976e+06", \
            "1.69453e+06, 1.69211e+06, 1.68976e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.87879e+06, 1.87747e+06, 1.87609e+06", \
            "1.87887e+06, 1.87747e+06, 1.87609e+06", \
            "1.87878e+06, 1.87747e+06, 1.87608e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "RST_N";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.84252e+06, 1.84123e+06, 1.83989e+06", \
            "1.8426e+06, 1.84122e+06, 1.83989e+06", \
            "1.84252e+06, 1.84123e+06, 1.83988e+06" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
    }
    pin (CP) {
      clock : true;
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 188.4;
      rise_capacitance : 188.4;
      rise_capacitance_range (71.211, 352.009);
      fall_capacitance : 188.897;
      fall_capacitance_range (71.2328, 353.321);
      internal_power () {
        when : "(D * RST_N * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06703e+07, 1.06703e+07, 1.06701e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.32883e+06, 9.32886e+06, 9.32897e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * RST_N * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.07277e+07, 1.07278e+07, 1.07276e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.27138e+06, 9.27142e+06, 9.27152e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.50195e+06, 9.50198e+06, 9.50207e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.44408e+06, 9.44411e+06, 9.4442e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * !RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06167e+07, 1.06167e+07, 1.06165e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.38846e+06, 9.38846e+06, 9.38856e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * !RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06748e+07, 1.06747e+07, 1.06746e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.33069e+06, 9.3307e+06, 9.33079e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * RST_N * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.19434e+06, 9.19434e+06, 9.19427e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * RST_N * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.14035e+06, 9.14035e+06, 9.14029e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06633e+07, 1.06633e+07, 1.06632e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.36997e+06, 9.37e+06, 9.37008e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.0721e+07, 1.07209e+07, 1.07209e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.31256e+06, 9.31258e+06, 9.31266e+06" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      capacitance : 94.1924;
      rise_capacitance : 94.1924;
      rise_capacitance_range (35.6055, 175.973);
      fall_capacitance : 94.4493;
      fall_capacitance_range (35.6165, 176.662);
      internal_power () {
        when : "(CP * RST_N * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06131e+07, 1.0613e+07, 1.06129e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.32898e+06, 9.32902e+06, 9.3291e+06" \
          );
        }
      }
      internal_power () {
        when : "(CP * RST_N * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06417e+07, 1.06416e+07, 1.06415e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.3004e+06, 9.30043e+06, 9.30051e+06" \
          );
        }
      }
      internal_power () {
        when : "(CP * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06635e+07, 1.06635e+07, 1.06635e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06525e+07, 1.06525e+07, 1.06525e+07" \
          );
        }
      }
      internal_power () {
        when : "(CP * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06891e+07, 1.06891e+07, 1.06891e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06272e+07, 1.06272e+07, 1.06272e+07" \
          );
        }
      }
      internal_power () {
        when : "(!CP * RST_N * Q * !Q_bar) + (!CP * RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.33534e+06, 9.33534e+06, 9.33535e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.21697e+06, 9.21697e+06, 9.21708e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * RST_N * Q * !Q_bar) + (!CP * RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.36058e+06, 9.36058e+06, 9.3606e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.19181e+06, 9.19181e+06, 9.19192e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * !RST_N * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.22342e+06, 9.2234e+06, 9.22342e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.15368e+06, 9.15368e+06, 9.15363e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * !RST_N * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.2487e+06, 9.2487e+06, 9.24871e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.1285e+06, 9.1285e+06, 9.12845e+06" \
          );
        }
      }
    }
    pin (RST_N) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 282.577;
      rise_capacitance : 282.577;
      rise_capacitance_range (106.817, 527.919);
      fall_capacitance : 283.436;
      fall_capacitance_range (106.849, 530.254);
      internal_power () {
        when : "(CP * !Q * Q_bar) + (!CP * !D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06623e+07, 1.06623e+07, 1.06623e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.06293e+07, 1.06293e+07, 1.06293e+07" \
          );
        }
      }
      internal_power () {
        when : "(CP * !Q * Q_bar) + (!CP * !D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.07389e+07, 1.07389e+07, 1.07389e+07" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.05533e+07, 1.05533e+07, 1.05533e+07" \
          );
        }
      }
      internal_power () {
        when : "(!CP * D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.26366e+06, 9.26366e+06, 9.26366e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.19002e+06, 9.19002e+06, 9.18998e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.3403e+06, 9.3403e+06, 9.34031e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "9.11381e+06, 9.11381e+06, 9.11376e+06" \
          );
        }
      }
    }
    ff (IQ,IQ_bar) {
      clear : "!RST_N";
      clocked_on : "CP";
      next_state : "D";
      power_down_function : "(!VDD) + (VSS)";
    }
  }
  cell (DFFX1) {
    area : 1413984;
    cell_leakage_power : 181529;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 206465;
      when : "(CP * D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 157040;
      when : "(CP * !D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(CP * !D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 206123;
      when : "(!CP * D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 206123;
      when : "(!CP * D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 156712;
      when : "(!CP * !D * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 156712;
      when : "(!CP * !D * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!CP * !D * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 181529;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.97285e+06, 5.17353e+06, 5.37377e+06", \
            "4.97226e+06, 5.17277e+06, 5.37238e+06", \
            "4.97292e+06, 5.17353e+06, 5.37389e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27824e+06, 2.47352e+06, 2.67298e+06", \
            "2.27824e+06, 2.47349e+06, 2.67296e+06", \
            "2.27824e+06, 2.47352e+06, 2.67298e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.64524e+06, 2.68061e+06, 2.71402e+06", \
            "2.6443e+06, 2.67969e+06, 2.71318e+06", \
            "2.64466e+06, 2.68002e+06, 2.71358e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "658297, 666042, 674416", \
            "658891, 666278, 674001", \
            "658302, 666482, 673779" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.19804e+06, 5.39651e+06, 5.59603e+06", \
            "5.19791e+06, 5.3975e+06, 5.59673e+06", \
            "5.19667e+06, 5.39827e+06, 5.59734e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.28636e+06, 2.48029e+06, 2.67869e+06", \
            "2.28632e+06, 2.48027e+06, 2.6786e+06", \
            "2.28639e+06, 2.4803e+06, 2.67868e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.66307e+06, 3.69846e+06, 3.7319e+06", \
            "3.66136e+06, 3.69678e+06, 3.73022e+06", \
            "3.65468e+06, 3.69003e+06, 3.72358e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "659887, 666941, 675490", \
            "659811, 666919, 675471", \
            "659826, 667771, 674149" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(CP & D)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(CP * D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "629208, 649488, 668527", \
            "629156, 649461, 668536", \
            "629232, 649473, 668490" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272696, 279286, 286185", \
            "272546, 279304, 286208", \
            "272682, 279298, 286225" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "~CP";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!CP";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628704, 649040, 668076", \
            "628822, 649042, 668021", \
            "628790, 649132, 668161" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272670, 279263, 286219", \
            "272672, 279288, 286276", \
            "272684, 279320, 286252" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.31531e+06, 2.48942e+06, 2.66498e+06", \
            "2.31504e+06, 2.4897e+06, 2.66563e+06", \
            "2.31471e+06, 2.48988e+06, 2.66508e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.23053e+06, 2.42741e+06, 2.62815e+06", \
            "2.2305e+06, 2.42747e+06, 2.62636e+06", \
            "2.23048e+06, 2.42746e+06, 2.62811e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "629208, 649488, 668527", \
            "629156, 649461, 668536", \
            "629232, 649473, 668490" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272696, 279286, 286185", \
            "272546, 279304, 286208", \
            "272682, 279298, 286225" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.11546e+06, 1.11525e+06, 1.11506e+06", \
            "1.11547e+06, 1.11525e+06, 1.11505e+06", \
            "1.11546e+06, 1.11525e+06, 1.11506e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "309548, 307602, 305540", \
            "309543, 307601, 305535", \
            "309528, 307584, 305521" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.14322e+06, 1.14304e+06, 1.1429e+06", \
            "1.14323e+06, 1.14304e+06, 1.14288e+06", \
            "1.14322e+06, 1.14304e+06, 1.1429e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "332030, 331182, 330414", \
            "332026, 331181, 330408", \
            "332013, 331169, 330401" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.13828e+06, 1.138e+06, 1.13775e+06", \
            "1.13824e+06, 1.13798e+06, 1.13773e+06", \
            "1.13814e+06, 1.13787e+06, 1.13761e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "386622, 384711, 382682", \
            "386613, 384702, 382673", \
            "386535, 384624, 382604" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.17724e+06, 1.17686e+06, 1.17672e+06", \
            "1.17669e+06, 1.17622e+06, 1.17599e+06", \
            "1.17789e+06, 1.17647e+06, 1.17584e+06" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "349574, 348713, 347917", \
            "349694, 348739, 348021", \
            "349464, 348650, 347076" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "IQ_bar";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "CP";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.24082e+06, 5.44124e+06, 5.64201e+06", \
            "5.23881e+06, 5.4396e+06, 5.64067e+06", \
            "5.23958e+06, 5.44019e+06, 5.64118e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.27789e+06, 2.47313e+06, 2.67255e+06", \
            "2.27789e+06, 2.47319e+06, 2.67256e+06", \
            "2.27791e+06, 2.47313e+06, 2.67254e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.37827e+06, 2.41352e+06, 2.4469e+06", \
            "2.37818e+06, 2.41342e+06, 2.44684e+06", \
            "2.37831e+06, 2.4135e+06, 2.44698e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "651937, 659288, 666622", \
            "651691, 659073, 666621", \
            "652060, 659545, 666622" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "6.27559e+06, 6.47566e+06, 6.67587e+06", \
            "6.2735e+06, 6.47411e+06, 6.67371e+06", \
            "6.26477e+06, 6.46525e+06, 6.66577e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.28536e+06, 2.48006e+06, 2.67894e+06", \
            "2.28527e+06, 2.48e+06, 2.67902e+06", \
            "2.28544e+06, 2.48012e+06, 2.67916e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.55651e+06, 2.59162e+06, 2.62507e+06", \
            "2.55627e+06, 2.59163e+06, 2.62499e+06", \
            "2.55677e+06, 2.59207e+06, 2.62552e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "653813, 661646, 669350", \
            "654048, 661529, 669263", \
            "653807, 661194, 669370" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(CP & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(CP * !D)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "629218, 649501, 668535", \
            "629162, 649497, 668545", \
            "629238, 649479, 668496" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272696, 279332, 286183", \
            "272465, 279300, 286206", \
            "272684, 279299, 286226" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "~CP";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!CP";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628704, 649045, 668081", \
            "628805, 649026, 668023", \
            "628762, 649104, 668135" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272664, 279276, 286225", \
            "272668, 279255, 286272", \
            "272678, 279313, 286247" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.31478e+06, 2.48971e+06, 2.66537e+06", \
            "2.31512e+06, 2.48978e+06, 2.66568e+06", \
            "2.31478e+06, 2.48994e+06, 2.66509e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.23059e+06, 2.4277e+06, 2.62857e+06", \
            "2.23061e+06, 2.42758e+06, 2.62646e+06", \
            "2.23059e+06, 2.42757e+06, 2.6285e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "629218, 649501, 668535", \
            "629162, 649497, 668545", \
            "629238, 649479, 668496" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272696, 279332, 286183", \
            "272465, 279300, 286206", \
            "272684, 279299, 286226" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "875556, 875341, 875153", \
            "875548, 875332, 875148", \
            "875551, 875330, 875151" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "372126, 370156, 368075", \
            "372123, 370154, 368070", \
            "372106, 370135, 368051" \
          );
        }
      }
      internal_power () {
        related_pin : "CP";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "896681, 896503, 896353", \
            "896677, 896494, 896348", \
            "896683, 896493, 896352" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "401459, 400611, 399846", \
            "401455, 400609, 399842", \
            "401441, 400594, 399830" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "954821, 954547, 954313", \
            "954801, 954540, 954301", \
            "954711, 954440, 954206" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "390554, 388580, 386479", \
            "390530, 388543, 386441", \
            "390428, 388426, 386337" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "915932, 915652, 915438", \
            "915708, 915427, 915650", \
            "914778, 917085, 913786" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "431008, 430135, 429396", \
            "431458, 429711, 429006", \
            "430571, 430032, 429741" \
          );
        }
      }
    }
    pin (CP) {
      clock : true;
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 188.539;
      rise_capacitance : 188.539;
      rise_capacitance_range (71.2136, 352.638);
      fall_capacitance : 188.618;
      fall_capacitance_range (71.2168, 352.585);
      internal_power () {
        when : "(D * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.22649e+06, 6.22649e+06, 6.22649e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.20506e+06, 6.20507e+06, 6.20507e+06" \
          );
        }
      }
      internal_power () {
        when : "(D * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.2819e+06, 6.2819e+06, 6.28191e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.14982e+06, 6.14983e+06, 6.14983e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.74902e+06, 4.74902e+06, 4.74902e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.72196e+06, 4.72196e+06, 4.72195e+06" \
          );
        }
      }
      internal_power () {
        when : "(!D * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.79118e+06, 4.79117e+06, 4.79118e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.6799e+06, 4.67991e+06, 4.67989e+06" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 9159.16;
      rise_capacitance : 9159.16;
      rise_capacitance_range (8226.37, 10418);
      fall_capacitance : 9456.81;
      fall_capacitance_range (8479.26, 10809.8);
      internal_power () {
        when : "(!CP * Q * !Q_bar) + (!CP * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.19405e+06, 6.19399e+06, 6.19382e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.72697e+06, 4.72692e+06, 4.72679e+06" \
          );
        }
      }
      internal_power () {
        when : "(!CP * Q * !Q_bar) + (!CP * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "6.25912e+06, 6.25917e+06, 6.25887e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "4.6623e+06, 4.66223e+06, 4.66214e+06" \
          );
        }
      }
    }
    latch (IQ,IQ_bar) {
      data_in : "D";
      enable : "CP";
      power_down_function : "(!VDD) + (VSS)";
    }
  }
  cell (INVX1) {
    area : 228420;
    cell_leakage_power : 25865;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 50472.9;
      when : "(A * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 1257.15;
      when : "(!A * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 25865;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "!A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "924026, 1.12254e+06, 1.30893e+06", \
            "920468, 1.11874e+06, 1.30541e+06", \
            "910512, 1.10796e+06, 1.29532e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "786972, 1.00556e+06, 1.22414e+06", \
            "786971, 1.00555e+06, 1.22415e+06", \
            "786975, 1.00555e+06, 1.22409e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "29457, 33891.1, 38298.4", \
            "30039.8, 34474.5, 38882.3", \
            "31853.1, 36278.7, 40673.1" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "16433.3, 20966.9, 25501.9", \
            "16433.3, 20966.8, 25501.9", \
            "16433.3, 20966.9, 25501.9" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "23990.5, 24561.5, 24769.1", \
            "23894.8, 24468.4, 24688.8", \
            "23633.7, 24202.7, 24455.5" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3912.43, 3793.52, 3669.5", \
            "3861.11, 3743.54, 3620.38", \
            "3706.14, 3592.81, 3472.67" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "-6979.84, -6561.6, -6509.31", \
            "-7021.15, -6662.78, -6596.05", \
            "-7274.53, -6854.29, -6865.01" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "34870.4, 34984.2, 35088.7", \
            "34841.7, 34953.8, 35057.1", \
            "34669.1, 34754.8, 34832.3" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 12991.6;
      rise_capacitance : 13168.3;
      rise_capacitance_range (12052.9, 14177.8);
      fall_capacitance : 12991.6;
      fall_capacitance_range (12018.4, 13837.5);
    }
  }
  cell (LATCHX1) {
    area : 586500;
    cell_leakage_power : 62642.6;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 100944;
      when : "(R * S * !Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(R * S * !Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 53274.1;
      when : "(R * !S * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(R * !S * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 53274.1;
      when : "(!R * S * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * S * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 52860.3;
      when : "(!R * !S * Q * !Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * !S * Q * !Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 52860.3;
      when : "(!R * !S * !Q * Q_bar)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!R * !S * !Q * Q_bar)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 62642.6;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Q) {
      direction : output;
      function : "!R";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~R & S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628677, 648995, 668013", \
            "628739, 649012, 668032", \
            "628968, 649144, 668058" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272792, 279346, 286218", \
            "272796, 279348, 286222", \
            "272774, 279359, 286275" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        sdf_cond : "(~R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628647, 648918, 667992", \
            "628675, 648994, 668008", \
            "628920, 649103, 668037" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272770, 279348, 286261", \
            "272775, 279329, 286253", \
            "272761, 279353, 286263" \
          );
        }
      }
      timing () {
        related_pin : "Q_bar";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.31318e+06, 2.4882e+06, 2.6642e+06", \
            "2.31443e+06, 2.48888e+06, 2.66434e+06", \
            "2.31258e+06, 2.48868e+06, 2.66436e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.22707e+06, 2.42417e+06, 2.6256e+06", \
            "2.22538e+06, 2.42248e+06, 2.6256e+06", \
            "2.22707e+06, 2.42252e+06, 2.62568e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628677, 648995, 668013", \
            "628739, 649012, 668032", \
            "628968, 649144, 668058" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272792, 279346, 286218", \
            "272796, 279348, 286222", \
            "272774, 279359, 286275" \
          );
        }
      }
      timing () {
        related_pin : "R";
        sdf_cond : "S";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "S";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "594031, 615925, 636253", \
            "594041, 615936, 636265", \
            "593937, 615813, 636129" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275145, 282034, 289236", \
            "275145, 282034, 289236", \
            "275151, 282181, 289402" \
          );
        }
      }
      timing () {
        related_pin : "R";
        sdf_cond : "~S";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!S";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "593849, 615761, 636078", \
            "593859, 615772, 636096", \
            "593756, 615647, 635976" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275046, 281945, 289127", \
            "275046, 281945, 289127", \
            "275052, 282086, 289314" \
          );
        }
      }
      timing () {
        related_pin : "R";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.1601e+06, 2.32911e+06, 2.49944e+06", \
            "2.15867e+06, 2.32838e+06, 2.49805e+06", \
            "2.16074e+06, 2.32982e+06, 2.4993e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.21699e+06, 2.41876e+06, 2.62138e+06", \
            "2.2167e+06, 2.41864e+06, 2.62142e+06", \
            "2.21705e+06, 2.41867e+06, 2.62122e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "594031, 615925, 636253", \
            "594041, 615936, 636265", \
            "593937, 615813, 636129" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275145, 282034, 289236", \
            "275145, 282034, 289236", \
            "275151, 282181, 289402" \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational_rise;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.02115e+06, 3.21254e+06, 3.4042e+06", \
            "3.02116e+06, 3.21257e+06, 3.40423e+06", \
            "3.01876e+06, 3.21196e+06, 3.40357e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.24504e+06, 2.44185e+06, 2.64278e+06", \
            "2.24504e+06, 2.44185e+06, 2.64278e+06", \
            "2.24501e+06, 2.44199e+06, 2.6428e+06" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "S";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "100365, 99907.7, 99472.4", \
            "100335, 99877.4, 99442.2", \
            "100251, 99794.4, 99359" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "S";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "130096, 129930, 129784", \
            "130063, 129897, 129752", \
            "129974, 129808, 129662" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "!S";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "42013.3, 39210.4, 36370.3", \
            "42003.4, 39199.9, 36358.6", \
            "41976.1, 39171.3, 36330" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        when : "!S";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "59555.4, 59103.6, 58747", \
            "59548.1, 59096.6, 58740.4", \
            "59529.2, 59077.2, 58724.6" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "513234, 512766, 512356", \
            "513233, 512775, 512352", \
            "513369, 512902, 512471" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "100365, 99907.7, 99472.4", \
            "100335, 99877.4, 99442.2", \
            "100251, 99794.4, 99359" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "482579, 481804, 481106", \
            "482578, 481814, 481102", \
            "482711, 481944, 481226" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "130096, 129930, 129784", \
            "130063, 129897, 129752", \
            "129974, 129808, 129662" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "273322, 273151, 273006", \
            "273322, 273151, 273006", \
            "273302, 273144, 272999" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "283664, 283529, 283429", \
            "283664, 283529, 283429", \
            "283644, 283503, 283424" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
    }
    pin (Q_bar) {
      direction : output;
      function : "!S";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "Q";
        sdf_cond : "(R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628677, 648995, 668013", \
            "628739, 649012, 668032", \
            "628968, 649144, 668058" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272792, 279346, 286218", \
            "272796, 279348, 286222", \
            "272774, 279359, 286275" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        sdf_cond : "(~R & ~S)";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "(!R * !S)";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628647, 648918, 667992", \
            "628675, 648994, 668008", \
            "628920, 649103, 668037" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272770, 279348, 286261", \
            "272775, 279329, 286253", \
            "272761, 279353, 286263" \
          );
        }
      }
      timing () {
        related_pin : "Q";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.31318e+06, 2.4882e+06, 2.6642e+06", \
            "2.31443e+06, 2.48888e+06, 2.66434e+06", \
            "2.31258e+06, 2.48868e+06, 2.66436e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.22707e+06, 2.42417e+06, 2.6256e+06", \
            "2.22538e+06, 2.42248e+06, 2.6256e+06", \
            "2.22707e+06, 2.42252e+06, 2.62568e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628677, 648995, 668013", \
            "628739, 649012, 668032", \
            "628968, 649144, 668058" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "272792, 279346, 286218", \
            "272796, 279348, 286222", \
            "272774, 279359, 286275" \
          );
        }
      }
      timing () {
        related_pin : "R";
        timing_sense : positive_unate;
        timing_type : combinational_rise;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.02115e+06, 3.21254e+06, 3.4042e+06", \
            "3.02116e+06, 3.21257e+06, 3.40423e+06", \
            "3.01876e+06, 3.21196e+06, 3.40357e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.24504e+06, 2.44185e+06, 2.64278e+06", \
            "2.24504e+06, 2.44185e+06, 2.64278e+06", \
            "2.24501e+06, 2.44199e+06, 2.6428e+06" \
          );
        }
      }
      timing () {
        related_pin : "S";
        sdf_cond : "R";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "R";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "594031, 615925, 636253", \
            "594041, 615936, 636265", \
            "593937, 615813, 636129" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275145, 282034, 289236", \
            "275145, 282034, 289236", \
            "275151, 282181, 289402" \
          );
        }
      }
      timing () {
        related_pin : "S";
        sdf_cond : "~R";
        timing_sense : negative_unate;
        timing_type : combinational_fall;
        when : "!R";
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "593849, 615761, 636078", \
            "593859, 615772, 636096", \
            "593756, 615647, 635976" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275046, 281945, 289127", \
            "275046, 281945, 289127", \
            "275052, 282086, 289314" \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.1601e+06, 2.32911e+06, 2.49944e+06", \
            "2.15867e+06, 2.32838e+06, 2.49805e+06", \
            "2.16074e+06, 2.32982e+06, 2.4993e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.21699e+06, 2.41876e+06, 2.62138e+06", \
            "2.2167e+06, 2.41864e+06, 2.62142e+06", \
            "2.21705e+06, 2.41867e+06, 2.62122e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "594031, 615925, 636253", \
            "594041, 615936, 636265", \
            "593937, 615813, 636129" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "275145, 282034, 289236", \
            "275145, 282034, 289236", \
            "275151, 282181, 289402" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "273322, 273151, 273006", \
            "273322, 273151, 273006", \
            "273302, 273144, 272999" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "R";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "283664, 283529, 283429", \
            "283664, 283529, 283429", \
            "283644, 283503, 283424" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "R";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "100365, 99907.7, 99472.4", \
            "100335, 99877.4, 99442.2", \
            "100251, 99794.4, 99359" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "R";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "130096, 129930, 129784", \
            "130063, 129897, 129752", \
            "129974, 129808, 129662" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "!R";
        related_pg_pin : VDD;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "42013.3, 39210.4, 36370.3", \
            "42003.4, 39199.9, 36358.6", \
            "41976.1, 39171.3, 36330" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        when : "!R";
        related_pg_pin : VSS;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "59555.4, 59103.6, 58747", \
            "59548.1, 59096.6, 58740.4", \
            "59529.2, 59077.2, 58724.6" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "513234, 512766, 512356", \
            "513233, 512775, 512352", \
            "513369, 512902, 512471" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "100365, 99907.7, 99472.4", \
            "100335, 99877.4, 99442.2", \
            "100251, 99794.4, 99359" \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "482579, 481804, 481106", \
            "482578, 481814, 481102", \
            "482711, 481944, 481226" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "130096, 129930, 129784", \
            "130063, 129897, 129752", \
            "129974, 129808, 129662" \
          );
        }
      }
    }
    pin (R) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5878;
      rise_capacitance : 94.5878;
      rise_capacitance_range (35.6348, 177.04);
      fall_capacitance : 94.5934;
      fall_capacitance_range (35.6374, 176.92);
      internal_power () {
        when : "(!S * !Q * Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.59813e+06, 1.59812e+06, 1.59812e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.58586e+06, 1.58586e+06, 1.58586e+06" \
          );
        }
      }
      internal_power () {
        when : "(!S * !Q * Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.61869e+06, 1.61869e+06, 1.61869e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.56529e+06, 1.56529e+06, 1.56529e+06" \
          );
        }
      }
    }
    pin (S) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5878;
      rise_capacitance : 94.5878;
      rise_capacitance_range (35.6348, 177.04);
      fall_capacitance : 94.5934;
      fall_capacitance_range (35.6374, 176.92);
      internal_power () {
        when : "(!R * Q * !Q_bar)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.59813e+06, 1.59812e+06, 1.59812e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.58586e+06, 1.58586e+06, 1.58586e+06" \
          );
        }
      }
      internal_power () {
        when : "(!R * Q * !Q_bar)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.61869e+06, 1.61869e+06, 1.61869e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.56529e+06, 1.56529e+06, 1.56529e+06" \
          );
        }
      }
    }
  }
  cell (NAND2X1) {
    area : 247860;
    cell_leakage_power : 13181.1;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 49749.5;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 1083.84;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 1256.6;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 634.403;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 13181.1;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(!A1) + (!A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.48635e+06, 1.62497e+06, 1.77162e+06", \
            "1.4865e+06, 1.62444e+06, 1.77122e+06", \
            "1.48627e+06, 1.62491e+06, 1.77146e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "983366, 1.16094e+06, 1.35285e+06", \
            "983337, 1.16105e+06, 1.35315e+06", \
            "983366, 1.16094e+06, 1.35314e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "582642, 613850, 642087", \
            "582682, 613855, 642175", \
            "582622, 613804, 642198" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "249005, 260422, 272309", \
            "248997, 260497, 272333", \
            "248969, 260535, 272314" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.86112e+06, 2.02223e+06, 2.18797e+06", \
            "1.86071e+06, 2.02379e+06, 2.18907e+06", \
            "1.8605e+06, 2.02209e+06, 2.18784e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.74173e+06, 1.93671e+06, 2.13558e+06", \
            "1.74328e+06, 1.93647e+06, 2.13552e+06", \
            "1.74165e+06, 1.93671e+06, 2.13557e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "728928, 773299, 812400", \
            "728956, 773329, 812430", \
            "728992, 773455, 812546" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "259912, 276351, 292420", \
            "259911, 276351, 292421", \
            "260183, 276335, 292420" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "37792.6, 37014.9, 36466.2", \
            "37827, 37030.4, 36480.1", \
            "37911.3, 37134.1, 36577.2" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "39552.6, 38911.6, 38308.9", \
            "39520.5, 38880.8, 38274.2", \
            "39434, 38793.2, 38183.5" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7259.81, 6187.24, 5393.55", \
            "7294.2, 6203, 5407.95", \
            "7384.71, 6312, 5510.11" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "68937.1, 68548.9, 68190", \
            "68906.4, 68512.6, 68151.3", \
            "68810.4, 68416, 68049.3" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "55050.2, 54628.4, 54368.3", \
            "55075.3, 54699.5, 54433.5", \
            "55155.9, 54746.2, 54486.7" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "43687.9, 42679.5, 41780.9", \
            "43656.9, 42648.4, 41749.8", \
            "43562.4, 42553.6, 41656.1" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "7296.35, 6576.48, 6031.2", \
            "7321.3, 6647.6, 6098.02", \
            "7403.67, 6695.82, 6150.44" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "89954.9, 89148.2, 88452.5", \
            "89920.5, 89113.6, 88417.8", \
            "89816.6, 89008.9, 88313.7" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 93.2221;
      rise_capacitance : 93.2221;
      rise_capacitance_range (35.3887, 176.425);
      fall_capacitance : 93.2262;
      fall_capacitance_range (35.3888, 176.448);
      internal_power () {
        when : "(!A2 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "19487.7, 19487.6, 19492.6" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "30712.8, 30712.8, 30706.8" \
          );
        }
      }
      internal_power () {
        when : "(!A2 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "32913.5, 32913.9, 32931.8" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "17385.2, 17384.8, 17366.1" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.2884;
      rise_capacitance : 94.2884;
      rise_capacitance_range (35.605, 176.509);
      fall_capacitance : 94.4941;
      fall_capacitance_range (35.616, 176.889);
      internal_power () {
        when : "(!A1 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "37414, 37413.5, 37414.6" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "25453.2, 25453.7, 25454.5" \
          );
        }
      }
      internal_power () {
        when : "(!A1 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "68091.1, 68090.8, 68098.8" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "-4868.61, -4868.18, -4869.65" \
          );
        }
      }
    }
  }
  cell (NOR2X1) {
    area : 399500;
    cell_leakage_power : 38558.3;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 50834.8;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 50472.2;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 50472.2;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 2453.93;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 38558.3;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(!A1 * !A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.70945e+06, 1.86487e+06, 2.02402e+06", \
            "1.71088e+06, 1.86469e+06, 2.02311e+06", \
            "1.71099e+06, 1.86506e+06, 2.02331e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.36584e+06, 1.56762e+06, 1.77584e+06", \
            "1.36546e+06, 1.56763e+06, 1.7758e+06", \
            "1.3658e+06, 1.56773e+06, 1.7758e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "571514, 595366, 617189", \
            "571554, 595409, 617200", \
            "571668, 595374, 617054" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "249304, 257826, 266271", \
            "249298, 257750, 266270", \
            "249247, 257786, 266453" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.70945e+06, 1.86487e+06, 2.02402e+06", \
            "1.71088e+06, 1.86469e+06, 2.02311e+06", \
            "1.71099e+06, 1.86506e+06, 2.02331e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.36584e+06, 1.56762e+06, 1.77584e+06", \
            "1.36546e+06, 1.56763e+06, 1.7758e+06", \
            "1.3658e+06, 1.56773e+06, 1.7758e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "571514, 595366, 617189", \
            "571554, 595409, 617200", \
            "571668, 595374, 617054" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "249304, 257826, 266271", \
            "249298, 257750, 266270", \
            "249247, 257786, 266453" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "53631.4, 53031, 52518.8", \
            "53698.8, 53056.5, 52523.5", \
            "53793.5, 53156.8, 52618.4" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "39181.7, 38685, 38215.5", \
            "39149.9, 38652.8, 38185.1", \
            "39055.2, 38565.9, 38102.1" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "13213.7, 12267.5, 11453", \
            "13284.6, 12298, 11458.7", \
            "13375.4, 12406.7, 11556.9" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "77738.3, 77532.2, 77357.6", \
            "77702.1, 77495.5, 77322.6", \
            "77595, 77396.1, 77227.1" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "53631.4, 53031, 52518.8", \
            "53698.8, 53056.5, 52523.5", \
            "53793.5, 53156.8, 52618.4" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "39181.7, 38685, 38215.5", \
            "39149.9, 38652.8, 38185.1", \
            "39055.2, 38565.9, 38102.1" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "13213.7, 12267.5, 11453", \
            "13284.6, 12298, 11458.7", \
            "13375.4, 12406.7, 11556.9" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "77738.3, 77532.2, 77357.6", \
            "77702.1, 77495.5, 77322.6", \
            "77595, 77396.1, 77227.1" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5629;
      rise_capacitance : 94.5629;
      rise_capacitance_range (35.635, 177.039);
      fall_capacitance : 94.5945;
      fall_capacitance_range (35.6376, 177.069);
      internal_power () {
        when : "(A2 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.52481e+06, 1.52481e+06, 1.52481e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.51435e+06, 1.51435e+06, 1.51435e+06" \
          );
        }
      }
      internal_power () {
        when : "(A2 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.54543e+06, 1.54543e+06, 1.54544e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.49372e+06, 1.49372e+06, 1.49372e+06" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5629;
      rise_capacitance : 94.5629;
      rise_capacitance_range (35.635, 177.039);
      fall_capacitance : 94.5945;
      fall_capacitance_range (35.6376, 177.069);
      internal_power () {
        when : "(A1 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.52481e+06, 1.52481e+06, 1.52481e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.51435e+06, 1.51435e+06, 1.51435e+06" \
          );
        }
      }
      internal_power () {
        when : "(A1 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.54543e+06, 1.54543e+06, 1.54544e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.49372e+06, 1.49372e+06, 1.49372e+06" \
          );
        }
      }
    }
  }

cell (TSBUF) {
  area : 446148;
  cell_leakage_power : 26.40;
  pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
  }
  leakage_power () {
    value : 333.79;
    when : "!I !OE !Y";
  }
  leakage_power () {
    value : 333.79;
    when : "!I !OE Y";
  }
  leakage_power () {
    value : 2314.1;
    when : "!I OE !Y";
  }
  leakage_power () {
    value : 2333.2;
    when : "I !OE !Y";
  }
  leakage_power () {
    value : 2333.2;
    when : "I !OE Y";
  }
  leakage_power () {
    value : 26.40;
    when : "I OE Y";
  }
  pin(I) {
    direction : input;
    related_ground_pin : VSS;
    related_power_pin : VDD;
    capacitance : 94.5598;
    rise_capacitance : 94.5787;
    rise_capacitance_range (35.6332, 177.04);
    fall_capacitance : 94.5598;
    fall_capacitance_range (35.6344, 176.765);
    internal_power () {
      when : "!OE&Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.52481e+06, 1.52481e+06, 1.52481e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.51435e+06, 1.51435e+06, 1.51435e+06" \
          );
      }
    }
    internal_power () {
      when : "!OE&!Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.54543e+06, 1.54543e+06, 1.54544e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.49372e+06, 1.49372e+06, 1.49372e+06" \
          );
      }
    }
  }
  pin(OE) {
    direction : input;
    related_ground_pin : VSS;
    related_power_pin : VDD;
    max_transition : 5000;
    capacitance : 94.5598;
    rise_capacitance : 94.5787;
    rise_capacitance_range (35.6332, 177.04);
    fall_capacitance : 94.5598;
    fall_capacitance_range (35.6344, 176.765);
    internal_power () {
      when : "I&Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.52481e+06, 1.52481e+06, 1.52481e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.51435e+06, 1.51435e+06, 1.51435e+06" \
          );
      }
    }
    internal_power () {
      when : "!I&!Y";
      rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.54543e+06, 1.54543e+06, 1.54544e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.49372e+06, 1.49372e+06, 1.49372e+06" \
          );
      }
    }
  }
  pin(Y) {
    direction : output;
    function : "I";
    three_state : "(!OE)";
    max_capacitance : 20000;
    timing () {
      related_pin : "I";
      timing_sense : positive_unate;
      timing_type : combinational;
      cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.8911e+06, 2.07241e+06, 2.05338e+06", \
            "1.89106e+06, 2.07239e+06, 2.05336e+06", \
            "1.8909e+06, 2.07272e+06, 2.05392e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.93597e+06, 2.12967e+06, 2.3287e+06", \
            "1.93593e+06, 2.12968e+06, 2.3287e+06", \
            "1.93471e+06, 2.13015e+06, 2.32939e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "645204, 675753, 0.70482e+06", \
            "645218, 675792, 0.70483e+06", \
            "645238, 675837, 0.70493e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "260290, 273787, 287796", \
            "260293, 273798, 287779", \
            "260304, 273800, 287796" \
          );
        }
    }
    timing () {
      related_pin : "OE";
      timing_sense : positive_unate;
      timing_type : three_state_enable;
      cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.65313e+06, 1.82844e+06, 2.00298e+06", \
            "1.65315e+06, 1.82843e+06, 2.00218e+06", \
            "1.65312e+06, 1.82754e+06, 2.00254e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.94151e+06, 2.14092e+06, 2.34397e+06", \
            "1.94151e+06, 2.14092e+06, 2.34395e+06", \
            "1.94143e+06, 2.14073e+06, 2.34368e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "628849, 661663, 692829", \
            "628848, 661662, 692834", \
            "628669, 661390, 692712" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "260594, 275373, 289581", \
            "260569, 275373, 289738", \
            "260358, 275100, 289620" \
          );
        }
    }
    timing () {
      related_pin : "OE";
      timing_sense : negative_unate;
      timing_type : three_state_disable;
      cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.54413e+06, 1.68694e+06, 1.83729e+06", \
            "1.54485e+06, 1.687e+06, 1.83734e+06", \
            "1.54462e+06, 1.6874e+06, 1.83728e+06" \
          );
      }
      rise_transition (scalar) {
        values ( \
          "0" \
        );
      }
      cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "320989, 341016, 359216", \
            "321008, 341042, 359246", \
            "321132, 341187, 359422" \
          );
      }
      fall_transition (scalar) {
        values ( \
          "0" \
        );
      }
    }
    internal_power () {
      related_pin : "I";
      rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "38542.7, 36660.2, 35089.5", \
            "38626.2, 36709.4, 35138.3", \
            "38770, 36874.7, 35287.8" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "23298, 23272, 23252", \
            "23292, 23267, 23246", \
            "23274, 23248, 23227" \
          );
      }
    }
    internal_power () {
      related_pin : "OE";
      rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "38542.7, 36660.2, 35089.5", \
            "38626.2, 36709.4, 35138.3", \
            "38770, 36874.7, 35287.8" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "23298, 23272, 23252", \
            "23292, 23267, 23246", \
            "23274, 23248, 23227" \
          );
      }
    }
  }
}

cell (AND2X1) {
    area : 433500;
    cell_leakage_power : 51333;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 51021.9;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 51526.3;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 51694.1;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 51089.8;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 51333;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1 * A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.48574e+06, 1.65465e+06, 1.82333e+06", \
            "1.48583e+06, 1.65474e+06, 1.82342e+06", \
            "1.48627e+06, 1.65439e+06, 1.8231e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "820238, 1.03145e+06, 1.24462e+06", \
            "820223, 1.03145e+06, 1.24462e+06", \
            "820206, 1.03148e+06, 1.24501e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.73426e+06, 1.77716e+06, 1.81618e+06", \
            "1.7339e+06, 1.77686e+06, 1.81603e+06", \
            "1.73438e+06, 1.7774e+06, 1.81629e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "402378, 413770, 424931", \
            "402558, 413973, 424917", \
            "402375, 413654, 424929" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.66171e+06, 1.82975e+06, 1.99683e+06", \
            "1.66132e+06, 1.82958e+06, 1.99776e+06", \
            "1.66142e+06, 1.82886e+06, 1.99777e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "832345, 1.0412e+06, 1.25285e+06", \
            "832379, 1.04067e+06, 1.2528e+06", \
            "832425, 1.04129e+06, 1.2528e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.96691e+06, 2.02226e+06, 2.07311e+06", \
            "1.96692e+06, 2.02229e+06, 2.07297e+06", \
            "1.96708e+06, 2.02246e+06, 2.07333e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "505837, 519992, 534373", \
            "505685, 519828, 534409", \
            "505661, 519780, 534132" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "240197, 240216, 240189", \
            "240194, 240214, 240187", \
            "240194, 240205, 240183" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "123531, 122602, 121741", \
            "123528, 122602, 121736", \
            "123516, 122594, 121723" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "269608, 269394, 269176", \
            "269596, 269391, 269173", \
            "269602, 269380, 269166" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "95752.4, 95060.8, 94434", \
            "95750.2, 95062.1, 94429.8", \
            "95745.2, 95060.1, 94423.6" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "246514, 246507, 246449", \
            "246516, 246507, 246462", \
            "246517, 246497, 246462" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "152844, 151639, 150520", \
            "152846, 151642, 150519", \
            "152825, 151620, 150503" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "293179, 292938, 292687", \
            "293182, 292938, 292700", \
            "293182, 292929, 292701" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "109877, 108904, 108016", \
            "109881, 108910, 108018", \
            "109870, 108898, 108012" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.1637;
      rise_capacitance : 94.1673;
      rise_capacitance_range (35.5831, 176.274);
      fall_capacitance : 94.1637;
      fall_capacitance_range (35.583, 176.267);
      internal_power () {
        when : "(!A2 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.5329e+06, 1.5329e+06, 1.5329e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.54415e+06, 1.54415e+06, 1.54415e+06" \
          );
        }
      }
      internal_power () {
        when : "(!A2 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.54633e+06, 1.54633e+06, 1.54633e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.53082e+06, 1.53082e+06, 1.53081e+06" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.3916;
      rise_capacitance : 94.3916;
      rise_capacitance_range (35.6265, 176.485);
      fall_capacitance : 94.5231;
      fall_capacitance_range (35.6309, 176.869);
      internal_power () {
        when : "(!A1 * !Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.55031e+06, 1.55031e+06, 1.55031e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.53916e+06, 1.53916e+06, 1.53917e+06" \
          );
        }
      }
      internal_power () {
        when : "(!A1 * !Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.58099e+06, 1.58099e+06, 1.58099e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.50884e+06, 1.50884e+06, 1.50884e+06" \
          );
        }
      }
    }
  }
  cell (OR2X1) {
    area : 563530;
    cell_leakage_power : 52104.9;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 52094.4;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 51735;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 51735;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 52855.1;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 52104.9;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1) + (A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.4693e+06, 1.63752e+06, 1.80654e+06", \
            "1.47017e+06, 1.63813e+06, 1.8067e+06", \
            "1.46944e+06, 1.63808e+06, 1.80638e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "814555, 1.02618e+06, 1.24005e+06", \
            "814537, 1.02616e+06, 1.24004e+06", \
            "814565, 1.02616e+06, 1.24007e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.88416e+06, 1.93457e+06, 1.98014e+06", \
            "1.8842e+06, 1.93461e+06, 1.98019e+06", \
            "1.88413e+06, 1.93468e+06, 1.98015e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "448659, 461498, 474845", \
            "448665, 461503, 474820", \
            "448657, 461271, 474799" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.4693e+06, 1.63752e+06, 1.80654e+06", \
            "1.47017e+06, 1.63813e+06, 1.8067e+06", \
            "1.46944e+06, 1.63808e+06, 1.80638e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "814555, 1.02618e+06, 1.24005e+06", \
            "814537, 1.02616e+06, 1.24004e+06", \
            "814565, 1.02616e+06, 1.24007e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.88416e+06, 1.93457e+06, 1.98014e+06", \
            "1.8842e+06, 1.93461e+06, 1.98019e+06", \
            "1.88413e+06, 1.93468e+06, 1.98015e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "448659, 461498, 474845", \
            "448665, 461503, 474820", \
            "448657, 461271, 474799" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "242445, 242478, 242472", \
            "242453, 242482, 242469", \
            "242446, 242487, 242470" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "139035, 137957, 136953", \
            "139032, 137953, 136948", \
            "139016, 137937, 136925" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "281636, 281435, 281238", \
            "281645, 281440, 281234", \
            "281624, 281443, 281235" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "103329, 102488, 101726", \
            "103327, 102486, 101724", \
            "103320, 102479, 101709" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "242445, 242478, 242472", \
            "242453, 242482, 242469", \
            "242446, 242487, 242470" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "139035, 137957, 136953", \
            "139032, 137953, 136948", \
            "139016, 137937, 136925" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "281636, 281435, 281238", \
            "281645, 281440, 281234", \
            "281624, 281443, 281235" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "103329, 102488, 101726", \
            "103327, 102486, 101724", \
            "103320, 102479, 101709" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5933;
      rise_capacitance : 94.5933;
      rise_capacitance_range (35.6459, 176.983);
      fall_capacitance : 94.6115;
      fall_capacitance_range (35.6468, 177.029);
      internal_power () {
        when : "(A2 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.56267e+06, 1.56267e+06, 1.56267e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.55216e+06, 1.55216e+06, 1.55216e+06" \
          );
        }
      }
      internal_power () {
        when : "(A2 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.5833e+06, 1.5833e+06, 1.5833e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.53154e+06, 1.53154e+06, 1.53154e+06" \
          );
        }
      }
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 94.5933;
      rise_capacitance : 94.5933;
      rise_capacitance_range (35.6459, 176.983);
      fall_capacitance : 94.6115;
      fall_capacitance_range (35.6468, 177.029);
      internal_power () {
        when : "(A1 * Y)";
        related_pg_pin : VDD;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.56267e+06, 1.56267e+06, 1.56267e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.55216e+06, 1.55216e+06, 1.55216e+06" \
          );
        }
      }
      internal_power () {
        when : "(A1 * Y)";
        related_pg_pin : VSS;
        rise_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.5833e+06, 1.5833e+06, 1.5833e+06" \
          );
        }
        fall_power (passive_powerX1_3x1) {
          index_1 ("1000, 2000, 5000");
          values ( \
            "1.53154e+06, 1.53154e+06, 1.53154e+06" \
          );
        }
      }
    }
  }
  cell (XNOR2X1) {
    area : 1347557;
    cell_leakage_power : 91075.6;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 103074;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 103768;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 103543;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 53918;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 91075.6;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1 * A2) + (!A1 * !A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        sdf_cond : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.79639e+06, 4.95194e+06, 5.11092e+06", \
            "4.79541e+06, 4.95238e+06, 5.1101e+06", \
            "4.79665e+06, 4.95276e+06, 5.11106e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "890146, 1.09348e+06, 1.30058e+06", \
            "890239, 1.09334e+06, 1.30073e+06", \
            "889904, 1.09332e+06, 1.30056e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.93651e+06, 4.99161e+06, 5.04165e+06", \
            "4.93736e+06, 4.99224e+06, 5.04224e+06", \
            "4.93644e+06, 4.9917e+06, 5.04168e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "493268, 507898, 522895", \
            "493198, 508020, 523013", \
            "493312, 508015, 523106" \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "~A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.77893e+06, 3.93282e+06, 4.0891e+06", \
            "3.78022e+06, 3.93174e+06, 4.08749e+06", \
            "3.77804e+06, 3.93255e+06, 4.08953e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "882026, 1.08381e+06, 1.28998e+06", \
            "881643, 1.08406e+06, 1.29016e+06", \
            "882190, 1.08391e+06, 1.28989e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.59033e+06, 2.63573e+06, 2.67672e+06", \
            "2.5903e+06, 2.63583e+06, 2.6768e+06", \
            "2.59058e+06, 2.63593e+06, 2.6769e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "411146, 422633, 433994", \
            "411257, 422584, 433918", \
            "411184, 422596, 433922" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.66539e+06, 4.82039e+06, 4.97694e+06", \
            "4.66509e+06, 4.82003e+06, 4.97743e+06", \
            "4.66548e+06, 4.82042e+06, 4.97697e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "884413, 1.08785e+06, 1.29539e+06", \
            "884645, 1.08797e+06, 1.29537e+06", \
            "884402, 1.08785e+06, 1.29539e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.47585e+06, 5.52438e+06, 5.56776e+06", \
            "5.47561e+06, 5.52419e+06, 5.56798e+06", \
            "5.4743e+06, 5.52283e+06, 5.56641e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "426079, 437437, 449023", \
            "425965, 437324, 449175", \
            "425932, 437305, 449190" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "~A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.63336e+06, 3.79092e+06, 3.95378e+06", \
            "3.63464e+06, 3.79269e+06, 3.95206e+06", \
            "3.63302e+06, 3.79114e+06, 3.95423e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "882390, 1.08637e+06, 1.29349e+06", \
            "882194, 1.0862e+06, 1.29389e+06", \
            "882505, 1.08637e+06, 1.29353e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.62282e+06, 2.67685e+06, 2.72575e+06", \
            "2.62279e+06, 2.67646e+06, 2.72534e+06", \
            "2.62339e+06, 2.67688e+06, 2.72564e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "487834, 502786, 517782", \
            "488052, 502875, 517834", \
            "487815, 502692, 517852" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "788742, 788411, 788135", \
            "788753, 788435, 788134", \
            "788753, 788418, 788137" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "438423, 437264, 436202", \
            "438432, 437269, 436202", \
            "438428, 437279, 436218" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "828905, 828336, 827849", \
            "828912, 828360, 827853", \
            "828914, 828346, 827853" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "399091, 398136, 397275", \
            "399100, 398141, 397276", \
            "399095, 398149, 397291" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "399045, 398710, 398396", \
            "399111, 398724, 398405", \
            "399171, 398831, 398527" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "274026, 273065, 272178", \
            "273956, 272996, 272111", \
            "273892, 272895, 272008" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "357569, 357000, 356483", \
            "357636, 357014, 356492", \
            "357692, 357117, 356608" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "316391, 315652, 314985", \
            "316321, 315583, 314917", \
            "316261, 315485, 314818" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "798058, 797720, 797408", \
            "798058, 797724, 797422", \
            "798060, 797722, 797410" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "477456, 476438, 475521", \
            "477412, 476400, 475546", \
            "477428, 476417, 475551" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "856749, 856180, 855653", \
            "856749, 856175, 855681", \
            "856754, 856185, 855658" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "420632, 419841, 419150", \
            "420590, 419803, 419176", \
            "420606, 419820, 419180" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "406174, 405893, 405687", \
            "406235, 405953, 405683", \
            "406303, 406023, 405820" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "291442, 290346, 289304", \
            "291431, 290300, 289257", \
            "291345, 290210, 289164" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "351634, 351121, 350710", \
            "351694, 351175, 350707", \
            "351764, 351251, 350844" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "352437, 351539, 350699", \
            "352425, 351494, 350651", \
            "352342, 351406, 350560" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 186.964;
      rise_capacitance : 186.964;
      rise_capacitance_range (71.005, 349.821);
      fall_capacitance : 187.356;
      fall_capacitance_range (71.0156, 351.158);
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 187.309;
      rise_capacitance : 187.426;
      rise_capacitance_range (71.0432, 349.796);
      fall_capacitance : 187.309;
      fall_capacitance_range (71.0144, 351.071);
    }
  }
  cell (XOR2X1) {
    area : 1042800;
    cell_leakage_power : 65218.9;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    leakage_power () {
      value : 101800;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 53331.2;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(A1 * !A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 53099.9;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * A2 * Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 52644.5;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      when : "(!A1 * !A2 * !Y)";
      related_pg_pin : VSS;
    }
    leakage_power () {
      value : 65218.9;
      related_pg_pin : VDD;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : VSS;
    }
    pin (Y) {
      direction : output;
      function : "(A1 * !A2) + (!A1 * A2)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 20000;
      timing () {
        related_pin : "A1";
        sdf_cond : "~A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.38292e+06, 2.51163e+06, 2.6467e+06", \
            "2.38302e+06, 2.51173e+06, 2.6468e+06", \
            "2.38312e+06, 2.51183e+06, 2.6469e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.07996e+06, 1.23819e+06, 1.41326e+06", \
            "1.08043e+06, 1.2386e+06, 1.4136e+06", \
            "1.08042e+06, 1.2386e+06, 1.41359e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.60173e+06, 2.66042e+06, 2.71301e+06", \
            "2.602e+06, 2.66046e+06, 2.71311e+06", \
            "2.6021e+06, 2.66054e+06, 2.71334e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "751476, 762671, 775626", \
            "751179, 762469, 775619", \
            "751176, 762466, 775230" \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A2";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "4.83581e+06, 4.97786e+06, 5.126e+06", \
            "4.8365e+06, 4.97893e+06, 5.12677e+06", \
            "4.83542e+06, 4.97787e+06, 5.12602e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.70378e+06, 1.89993e+06, 2.10492e+06", \
            "1.70372e+06, 1.89989e+06, 2.10478e+06", \
            "1.70372e+06, 1.89986e+06, 2.10475e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.66352e+06, 3.73458e+06, 3.79986e+06", \
            "3.66362e+06, 3.7345e+06, 3.80003e+06", \
            "3.66355e+06, 3.7348e+06, 3.79975e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "564570, 587613, 611046", \
            "564793, 587335, 611059", \
            "564842, 587301, 611060" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "~A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.4916e+06, 2.64154e+06, 2.79771e+06", \
            "2.49155e+06, 2.64125e+06, 2.79751e+06", \
            "2.49164e+06, 2.64159e+06, 2.79775e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.66477e+06, 1.86719e+06, 2.07474e+06", \
            "1.66475e+06, 1.86702e+06, 2.07468e+06", \
            "1.66478e+06, 1.86719e+06, 2.07474e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "2.5365e+06, 2.60506e+06, 2.66749e+06", \
            "2.53664e+06, 2.60517e+06, 2.66753e+06", \
            "2.53672e+06, 2.6053e+06, 2.66773e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "518535, 536408, 556172", \
            "518521, 536279, 556063", \
            "518658, 536411, 556184" \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1";
        cell_rise (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "5.30804e+06, 5.43029e+06, 5.55735e+06", \
            "5.3069e+06, 5.43022e+06, 5.55735e+06", \
            "5.30766e+06, 5.43098e+06, 5.55756e+06" \
          );
        }
        rise_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "1.17874e+06, 1.32586e+06, 1.48918e+06", \
            "1.17977e+06, 1.32585e+06, 1.48916e+06", \
            "1.17965e+06, 1.32558e+06, 1.48911e+06" \
          );
        }
        cell_fall (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "3.50958e+06, 3.57292e+06, 3.63145e+06", \
            "3.50971e+06, 3.5735e+06, 3.63154e+06", \
            "3.5096e+06, 3.57295e+06, 3.63148e+06" \
          );
        }
        fall_transition (delayX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "678952, 692252, 706427", \
            "679014, 691996, 706727", \
            "678952, 692252, 706426" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "560887, 560080, 559444", \
            "560919, 560128, 559481", \
            "560991, 560203, 559573" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "400121, 398460, 396912", \
            "400073, 398420, 396898", \
            "399971, 398323, 396784" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "519721, 518608, 517685", \
            "519759, 518657, 517727", \
            "519830, 518730, 517817" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "442534, 441131, 439839", \
            "442481, 441092, 439829", \
            "442388, 441001, 439717" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "324599, 323527, 322698", \
            "324592, 323521, 322692", \
            "324593, 323522, 322694" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "192581, 191326, 190141", \
            "192583, 191328, 190140", \
            "192581, 191325, 190143" \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!A2";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "366203, 364813, 363694", \
            "366196, 364807, 363688", \
            "366202, 364813, 363694" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "152366, 151414, 150539", \
            "152367, 151420, 150539", \
            "152362, 151413, 150539" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "531611, 530336, 529296", \
            "531619, 530364, 529325", \
            "531736, 530468, 529424" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "440806, 439468, 438222", \
            "440768, 439438, 438176", \
            "440674, 439336, 438090" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "471976, 470380, 469038", \
            "471984, 470408, 469067", \
            "472098, 470508, 469163" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "501233, 500192, 499243", \
            "501200, 500163, 499194", \
            "501106, 500064, 499116" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VDD;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "415994, 415329, 414826", \
            "415991, 415332, 414817", \
            "415994, 415329, 414826" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "168969, 167338, 165856", \
            "168966, 167344, 165851", \
            "168950, 167325, 165844" \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!A1";
        related_pg_pin : VSS;
        rise_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "476227, 475258, 474472", \
            "476221, 475261, 474465", \
            "476230, 475262, 474475" \
          );
        }
        fall_power (powerX1_3x3) {
          index_1 ("1000, 2000, 5000");
          index_2 ("10000, 15000, 20000");
          values ( \
            "118973, 117613, 116401", \
            "118970, 117623, 116397", \
            "118958, 117603, 116394" \
          );
        }
      }
    }
    pin (A1) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 186.964;
      rise_capacitance : 186.964;
      rise_capacitance_range (71.005, 349.821);
      fall_capacitance : 187.356;
      fall_capacitance_range (71.0156, 351.158);
    }
    pin (A2) {
      direction : input;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 5000;
      capacitance : 187.309;
      rise_capacitance : 187.426;
      rise_capacitance_range (71.0432, 349.796);
      fall_capacitance : 187.309;
      fall_capacitance_range (71.0144, 351.071);
    }
  }

}
